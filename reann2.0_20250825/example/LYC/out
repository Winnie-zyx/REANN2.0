300 -4.226333841463415 3 5.5 108 8 1 [118, 64] True 3 1 [108, 16, 16, 16] [0. 0. 0. 0.] True
contracted_coeff torch.Size([4, 3, 8, 108]) Parameter containing:
tensor([[[[ 1.0289e-02, -2.8784e-02,  3.0921e-02,  ...,  1.3786e-02,
            2.1860e-02, -1.0834e-02],
          [-1.8216e-02,  2.3387e-02,  1.9330e-02,  ..., -1.8742e-03,
           -1.8034e-02, -1.4486e-02],
          [-1.9054e-02, -1.4004e-02, -2.0947e-02,  ..., -2.1297e-02,
            2.2452e-02,  2.2751e-02],
          ...,
          [-2.0414e-02, -2.3285e-02,  2.3139e-02,  ...,  5.1631e-03,
            8.5525e-04, -1.8515e-02],
          [ 2.8171e-02, -2.1887e-02, -2.4297e-02,  ...,  2.8698e-02,
           -2.5573e-02,  2.8271e-02],
          [-1.8540e-02, -7.0385e-04,  8.0094e-03,  ..., -1.5497e-02,
           -1.0152e-02, -1.7378e-03]],

         [[-1.1773e-02,  1.4886e-02, -2.8376e-02,  ...,  2.1679e-02,
            1.4246e-02,  3.0941e-02],
          [-6.6167e-03,  2.3067e-02,  8.2821e-03,  ..., -2.9271e-02,
            5.5668e-03,  4.1062e-03],
          [-1.9318e-02, -2.7114e-02,  2.3220e-02,  ..., -2.1311e-02,
            2.1640e-02, -4.4342e-03],
          ...,
          [-2.0462e-02,  2.5361e-02,  2.8941e-02,  ...,  1.2110e-02,
            1.9113e-02,  6.5302e-03],
          [-5.3975e-03,  1.5069e-02, -2.8234e-02,  ...,  2.7173e-02,
            1.6907e-02, -2.7856e-02],
          [ 2.3006e-02,  5.6068e-03, -2.3332e-02,  ..., -1.2758e-02,
           -2.4550e-02,  2.0294e-02]],

         [[ 1.8864e-02, -1.6932e-02, -1.4598e-02,  ...,  6.1538e-03,
            2.9801e-02,  1.0455e-02],
          [ 1.6870e-02, -1.1250e-02, -2.6290e-03,  ...,  2.7076e-02,
           -1.4418e-04, -9.7723e-03],
          [-2.8229e-02,  2.2096e-02,  1.2230e-02,  ...,  2.2375e-02,
            1.8621e-02,  2.6652e-02],
          ...,
          [ 5.4591e-03, -2.6928e-02,  1.5787e-02,  ..., -1.0457e-02,
           -1.6158e-02,  2.5860e-02],
          [-1.0912e-02, -9.3259e-03, -1.3023e-02,  ..., -3.0143e-04,
            1.2547e-02, -1.3349e-02],
          [-9.1963e-03,  1.0729e-02,  3.0551e-02,  ..., -1.7944e-02,
            2.9308e-02, -6.3440e-03]]],


        [[[ 8.7964e-03, -1.3785e-04, -3.1342e-02,  ...,  3.1323e-02,
            2.9432e-02,  5.2788e-03],
          [ 2.5521e-02, -3.2386e-03,  1.2098e-02,  ..., -1.4865e-02,
           -2.2196e-02, -2.2981e-02],
          [-1.8330e-02, -4.7524e-03,  1.2061e-02,  ..., -6.5106e-03,
           -3.0897e-03, -2.2588e-02],
          ...,
          [ 1.3614e-02, -2.2745e-02, -3.0919e-02,  ..., -3.6474e-04,
           -1.8665e-03, -1.4866e-03],
          [ 1.3324e-02,  1.2889e-03, -5.1517e-03,  ...,  2.5732e-02,
            1.5427e-02,  2.4011e-02],
          [ 3.2556e-03,  2.0460e-02, -5.0031e-03,  ...,  4.5258e-03,
            2.5885e-02,  2.2038e-02]],

         [[ 1.1799e-02,  1.5345e-02,  2.4941e-02,  ...,  2.6396e-02,
            1.2112e-02,  7.1953e-03],
          [ 2.0120e-02,  2.7478e-02, -7.5540e-03,  ...,  9.4163e-03,
           -8.6059e-03,  2.4560e-02],
          [-7.5217e-03, -2.6155e-02,  2.9158e-02,  ..., -5.1398e-03,
           -5.1642e-03, -2.5073e-02],
          ...,
          [-1.9982e-02,  2.5316e-02,  1.5322e-02,  ...,  7.8508e-03,
           -1.5562e-02,  2.8278e-02],
          [-2.0651e-02,  1.7870e-02, -3.1371e-03,  ..., -3.8443e-03,
           -5.4939e-03,  4.1231e-03],
          [ 3.1409e-02, -2.7342e-02, -2.7189e-02,  ..., -8.4298e-03,
            7.1519e-04,  4.2038e-03]],

         [[ 2.5698e-02,  3.1045e-02, -3.0672e-02,  ...,  1.2497e-02,
           -7.2281e-03,  2.1543e-02],
          [-3.2006e-03, -2.9260e-02,  2.0028e-02,  ...,  9.7212e-03,
           -2.2157e-02, -8.3359e-03],
          [-2.7406e-02, -1.6915e-02, -9.2504e-03,  ..., -6.4066e-03,
           -4.6730e-03, -2.8160e-02],
          ...,
          [-1.8676e-02, -1.7935e-02,  4.3596e-04,  ...,  1.3592e-02,
           -1.8225e-02, -1.8692e-02],
          [ 4.2973e-03,  2.6244e-02, -2.2412e-02,  ..., -1.7678e-02,
           -1.1376e-02, -1.0354e-02],
          [-5.5678e-03,  5.7057e-03,  2.2118e-02,  ..., -2.7077e-02,
           -6.9841e-03,  1.0751e-02]]],


        [[[ 1.2614e-02,  2.7889e-02,  8.4922e-03,  ..., -2.7307e-02,
            2.6187e-03, -1.8002e-02],
          [ 5.1963e-03, -2.5398e-02, -2.3544e-02,  ..., -6.4989e-03,
           -1.6438e-02, -1.1796e-02],
          [-1.8009e-02, -8.0027e-04,  2.1700e-02,  ...,  9.0416e-03,
            1.1990e-03,  2.4919e-02],
          ...,
          [-1.2954e-02,  1.4922e-02,  1.2144e-03,  ...,  2.5770e-02,
            2.2140e-02, -2.5514e-02],
          [-2.8328e-02, -1.8185e-02, -9.8549e-03,  ...,  1.5507e-02,
            3.1234e-03, -1.8484e-02],
          [ 1.7807e-02,  2.5565e-02, -2.7442e-02,  ..., -3.9897e-03,
            1.8803e-02,  1.0984e-02]],

         [[-2.3845e-02,  2.5194e-02, -9.3823e-03,  ..., -2.2836e-02,
           -5.9405e-03, -2.8269e-02],
          [ 1.4879e-02,  2.9784e-02, -5.2205e-03,  ...,  2.9228e-02,
            2.3484e-02,  2.3441e-02],
          [-1.3607e-02,  9.4860e-03, -2.6137e-02,  ..., -2.9711e-03,
            5.8233e-03, -1.7226e-02],
          ...,
          [ 1.4979e-02, -6.0668e-03, -3.0920e-02,  ...,  2.6589e-02,
           -2.4465e-02,  2.7707e-03],
          [-2.0593e-02, -9.3833e-03, -2.3266e-02,  ..., -1.9074e-02,
            2.6045e-02, -6.0124e-03],
          [ 1.0373e-02, -1.3796e-02,  1.2991e-02,  ..., -1.8459e-02,
            1.2625e-03, -1.0097e-02]],

         [[-2.8894e-02, -1.4144e-02,  9.5002e-03,  ..., -2.9092e-02,
            5.6181e-03, -2.3773e-02],
          [-2.0318e-02,  2.5949e-02,  4.1158e-03,  ..., -2.5708e-02,
            7.3818e-03,  2.0284e-02],
          [-2.8668e-02, -3.1413e-02,  3.2346e-03,  ...,  1.8834e-02,
            1.6819e-02,  1.9774e-03],
          ...,
          [ 2.3978e-02, -2.5076e-04, -2.9961e-02,  ..., -9.1491e-03,
            1.4549e-02,  2.5792e-02],
          [ 2.3135e-02,  5.2531e-03,  2.5189e-02,  ...,  1.9738e-02,
            1.3381e-03,  1.8679e-02],
          [-1.2297e-02,  2.8496e-02, -1.7303e-02,  ...,  2.4558e-02,
           -3.9561e-04,  2.7997e-02]]],


        [[[ 5.2719e-03,  2.7615e-02, -1.0197e-02,  ..., -6.8319e-03,
            2.4664e-02,  2.3194e-03],
          [-1.4975e-02,  2.9863e-02, -2.2444e-02,  ..., -3.9317e-03,
           -4.4524e-03,  1.2943e-02],
          [-6.7166e-03, -1.4540e-02,  3.0135e-02,  ...,  1.5479e-02,
            1.9230e-02,  1.3375e-02],
          ...,
          [-2.9006e-03,  7.6041e-03,  4.0469e-03,  ...,  2.5315e-03,
           -9.2365e-03,  1.6818e-02],
          [ 2.2067e-02,  1.1368e-02, -1.7105e-02,  ...,  2.6676e-02,
           -3.0271e-02,  2.9342e-02],
          [ 6.3125e-03, -2.9502e-03, -1.1469e-02,  ...,  1.6716e-02,
            1.2286e-02,  5.9807e-03]],

         [[-2.6029e-02, -1.7194e-02,  1.5382e-02,  ...,  2.7977e-03,
            1.5350e-02, -9.0364e-03],
          [ 1.5336e-02, -2.0648e-02, -1.8820e-02,  ...,  4.8598e-04,
            1.4482e-02, -2.6469e-03],
          [ 1.7237e-02,  2.3368e-02, -6.1812e-03,  ...,  6.6280e-04,
           -5.5203e-03,  4.8745e-03],
          ...,
          [ 2.0591e-02,  6.3869e-03,  3.1481e-02,  ..., -8.4570e-03,
            3.0734e-03, -1.0661e-02],
          [ 2.4872e-02,  2.0054e-03, -2.7983e-02,  ...,  7.3822e-03,
            4.3409e-05, -1.7386e-02],
          [-2.1777e-02, -2.2451e-02, -7.5098e-03,  ..., -2.6961e-02,
           -2.7272e-02, -1.3803e-02]],

         [[-3.0272e-02, -7.7166e-03, -4.6497e-03,  ...,  1.7652e-03,
            1.0868e-02, -1.9484e-02],
          [ 1.9559e-02, -1.3245e-02, -9.1440e-03,  ..., -1.5074e-03,
           -2.0863e-02,  1.7868e-02],
          [-3.1911e-03,  2.0720e-02,  1.1002e-02,  ...,  1.1902e-02,
           -2.0569e-02, -1.1921e-02],
          ...,
          [ 2.9528e-02,  3.0042e-02,  1.1290e-02,  ..., -9.4988e-03,
            2.4676e-02, -2.5306e-02],
          [-3.0601e-02,  3.5664e-03,  1.2259e-02,  ..., -1.4793e-02,
            1.8677e-02, -3.0350e-03],
          [-4.0432e-03,  2.7883e-02,  1.9545e-02,  ..., -1.7056e-02,
           -4.5972e-03, -1.2227e-02]]]], device='cuda:0', requires_grad=True)
emb_neighnn.net.0.weight torch.Size([64, 118]) Parameter containing:
tensor([[-0.0060,  0.1376,  0.0033,  ...,  0.0209,  0.0781, -0.1081],
        [-0.0244,  0.1052, -0.1708,  ...,  0.1544, -0.1173,  0.0866],
        [ 0.0204,  0.0444, -0.0171,  ...,  0.1416, -0.0338, -0.0146],
        ...,
        [-0.1421,  0.0606,  0.0362,  ...,  0.1676, -0.1588,  0.1435],
        [-0.0943, -0.1723,  0.0443,  ...,  0.1705, -0.0029,  0.0120],
        [-0.1550, -0.0565, -0.1405,  ...,  0.0590,  0.1278, -0.0716]],
       device='cuda:0', requires_grad=True)
emb_neighnn.net.0.bias torch.Size([64]) Parameter containing:
tensor([ 0.0718,  0.0400, -0.0121, -0.0237, -0.0902, -0.0626, -0.0838,  0.0609,
         0.0236, -0.0142,  0.0305, -0.0111, -0.0725, -0.0708,  0.0742,  0.0480,
         0.0591,  0.0806,  0.0699,  0.0365,  0.0308, -0.0142,  0.0674,  0.0756,
         0.0273, -0.0057, -0.0300, -0.0717, -0.0305, -0.0659, -0.0064,  0.0734,
         0.0096, -0.0796,  0.0685,  0.0190, -0.0329,  0.0361, -0.0237,  0.0045,
        -0.0395,  0.0215, -0.0185, -0.0680, -0.0645,  0.0485,  0.0134, -0.0162,
         0.0725, -0.0542,  0.0048,  0.0306, -0.0198,  0.0572,  0.0457,  0.0498,
        -0.0537,  0.0729,  0.0355, -0.0177,  0.0920,  0.0424,  0.0328, -0.0796],
       device='cuda:0', requires_grad=True)
emb_neighnn.net.1.alpha torch.Size([1, 64]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]], device='cuda:0',
       requires_grad=True)
emb_neighnn.net.1.beta torch.Size([1, 64]) Parameter containing:
tensor([[0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085]], device='cuda:0', requires_grad=True)
emb_neighnn.net.2.weight torch.Size([24, 64]) Parameter containing:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0', requires_grad=True)
emb_neighnn.net.2.bias torch.Size([24]) Parameter containing:
tensor([ 7.8516e-03, -6.9642e-03,  7.1821e-04,  3.4482e-03, -7.9242e-04,
         1.9226e-03, -5.9416e-05, -3.5333e-04,  1.0000e+00,  1.0000e+00,
         1.0000e+00,  1.0000e+00,  1.0000e+00,  1.0000e+00,  1.0000e+00,
         1.0000e+00,  1.8167e+00,  1.5294e+00,  1.2056e+00,  2.3051e+00,
         1.3506e+00,  5.1176e-01,  1.4014e+00,  1.5766e+00], device='cuda:0',
       requires_grad=True)
emb_centernn.net.0.weight torch.Size([64, 118]) Parameter containing:
tensor([[ 0.1436, -0.1179,  0.0882,  ..., -0.1698, -0.0604, -0.0783],
        [ 0.0861, -0.1532,  0.1018,  ...,  0.1226,  0.0634,  0.0718],
        [-0.1663,  0.0624, -0.1686,  ...,  0.0499, -0.1497,  0.1689],
        ...,
        [-0.0647, -0.0517,  0.0683,  ...,  0.0074, -0.0504,  0.0701],
        [ 0.1288,  0.1774,  0.1149,  ..., -0.0003, -0.0229, -0.0209],
        [ 0.0936, -0.1383,  0.1177,  ...,  0.0082,  0.0540, -0.0977]],
       device='cuda:0', requires_grad=True)
emb_centernn.net.0.bias torch.Size([64]) Parameter containing:
tensor([-0.0325,  0.0265, -0.0611,  0.0006, -0.0136, -0.0102, -0.0752, -0.0016,
         0.0763, -0.0741, -0.0569, -0.0554,  0.0467, -0.0129, -0.0318,  0.0171,
         0.0502, -0.0657,  0.0768, -0.0600, -0.0089,  0.0645,  0.0312,  0.0652,
        -0.0553,  0.0280,  0.0112,  0.0698,  0.0004, -0.0369, -0.0496, -0.0039,
         0.0337,  0.0199,  0.0343,  0.0652,  0.0690, -0.0086,  0.0854, -0.0146,
        -0.0263,  0.0132,  0.0694,  0.0642, -0.0313, -0.0825,  0.0216, -0.0212,
         0.0071,  0.0178,  0.0908, -0.0858, -0.0418,  0.0064,  0.0825, -0.0239,
        -0.0205, -0.0482, -0.0267,  0.0899,  0.0530,  0.0332, -0.0486,  0.0798],
       device='cuda:0', requires_grad=True)
emb_centernn.net.1.alpha torch.Size([1, 64]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]], device='cuda:0',
       requires_grad=True)
emb_centernn.net.1.beta torch.Size([1, 64]) Parameter containing:
tensor([[0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085]], device='cuda:0', requires_grad=True)
emb_centernn.net.2.weight torch.Size([108, 64]) Parameter containing:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0', requires_grad=True)
emb_centernn.net.2.bias torch.Size([108]) Parameter containing:
tensor([-4.4489e-03, -3.3903e-03,  1.2454e-03, -5.4953e-05, -6.5465e-03,
        -1.2135e-03, -1.8447e-03,  3.6740e-03,  3.0064e-03, -6.4262e-04,
         2.2860e-03,  1.4458e-03,  2.4653e-03,  1.2188e-04, -2.0676e-04,
        -3.6534e-03,  2.9504e-03,  8.3057e-04, -8.5671e-05, -2.6074e-04,
         2.5820e-03, -2.1470e-03,  1.4132e-03, -2.3322e-03, -2.1965e-03,
         1.1464e-03,  1.2076e-03,  6.3515e-04, -7.6715e-03,  2.8052e-03,
         3.4679e-03, -2.4199e-03, -1.4122e-03,  9.4574e-04,  1.8881e-03,
        -9.8927e-04,  4.5262e-03, -3.0124e-03, -3.5446e-03, -1.4613e-03,
         3.1180e-03,  3.1488e-03, -1.1595e-03,  1.4077e-03,  4.7601e-03,
         1.7787e-03, -1.6834e-04, -3.1182e-03, -9.4972e-04, -2.8439e-03,
        -1.6821e-03,  2.6262e-03,  4.6089e-04, -7.1363e-03,  5.4562e-03,
         5.7709e-03, -1.1128e-03,  1.6795e-03,  6.4872e-03, -4.0177e-03,
        -3.9267e-03, -6.5981e-05, -3.5352e-03, -3.3077e-03,  3.1136e-03,
         1.2081e-03, -2.6538e-03, -1.7736e-03,  1.9615e-03,  4.2544e-03,
         4.6617e-03, -2.2859e-03, -1.3377e-03, -3.6073e-03, -1.4207e-03,
        -5.8904e-04,  2.8216e-03, -5.4499e-03,  9.4415e-03, -4.3301e-03,
        -1.9369e-03,  4.3483e-03,  3.8252e-03, -5.7414e-04,  2.5721e-04,
         3.4414e-03, -5.0331e-03,  3.2338e-03, -2.5752e-03,  4.7181e-03,
         4.6395e-03,  2.0227e-03,  1.5085e-03, -7.6317e-05,  1.3659e-03,
         1.0861e-03, -5.0200e-03,  2.5120e-03, -6.7156e-03,  5.2826e-03,
        -5.2282e-03, -3.6401e-03, -2.2032e-03, -2.9406e-03, -3.9019e-04,
         1.1548e-03, -2.4251e-03,  4.4998e-03], device='cuda:0',
       requires_grad=True)
ocmod.memssage_0.net.0.weight torch.Size([16, 108]) Parameter containing:
tensor([[ 0.0415,  0.0647,  0.1958,  ..., -0.0305, -0.1832,  0.0772],
        [ 0.1976, -0.1206,  0.1694,  ..., -0.0565,  0.0449, -0.1778],
        [-0.0094,  0.0228, -0.1063,  ...,  0.0849, -0.1327, -0.2003],
        ...,
        [-0.1668,  0.0887,  0.1364,  ...,  0.1312,  0.0187,  0.1198],
        [ 0.1026, -0.1729,  0.0195,  ...,  0.0264, -0.1654, -0.0726],
        [ 0.2195, -0.1759, -0.0503,  ...,  0.0461,  0.0369,  0.1607]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.0.bias torch.Size([16]) Parameter containing:
tensor([-0.0794, -0.0153,  0.0097,  0.0419, -0.0052, -0.0236, -0.0920,  0.0356,
         0.0050,  0.0609, -0.0892,  0.0668, -0.0045,  0.0461,  0.0136,  0.0130],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.1.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.1.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.2.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.2.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.3.weight torch.Size([16, 16]) Parameter containing:
tensor([[-0.0168, -0.2099, -0.4057, -0.1395, -0.0577,  0.0466, -0.3660,  0.3984,
          0.1572,  0.1049,  0.2159,  0.0235, -0.3415,  0.1535, -0.1318, -0.0767],
        [ 0.0839, -0.0842, -0.2241,  0.1247, -0.0238, -0.1976, -0.0472,  0.2627,
          0.2506,  0.4329, -0.2330,  0.3142,  0.0247, -0.0936,  0.1606,  0.1938],
        [-0.0700,  0.1678, -0.2401, -0.1364,  0.0386,  0.3370,  0.3196,  0.2844,
         -0.2346, -0.0825, -0.2727,  0.0906, -0.1481, -0.4155, -0.3991,  0.2295],
        [-0.0222,  0.2588, -0.0473,  0.3632, -0.2136, -0.0452,  0.4009,  0.1184,
         -0.2832, -0.3355, -0.3758,  0.3345,  0.3468,  0.3091,  0.3427,  0.1851],
        [ 0.0999,  0.0878, -0.0264,  0.3777,  0.4066, -0.0775,  0.1519, -0.3351,
          0.1271,  0.1501, -0.3525,  0.4103, -0.0944,  0.3908,  0.0295,  0.1127],
        [-0.0340,  0.1377, -0.2507,  0.4321, -0.0414, -0.1339,  0.1192,  0.1941,
          0.1059,  0.3327,  0.1189,  0.3608,  0.3612, -0.3527, -0.0276,  0.1892],
        [-0.0070, -0.3551,  0.1590, -0.1091, -0.0774,  0.1398, -0.0630, -0.0255,
          0.2017,  0.1997,  0.0357, -0.3546, -0.3547,  0.0880,  0.2435, -0.2986],
        [ 0.3161,  0.1794, -0.2655,  0.0818, -0.0360, -0.0924,  0.2769, -0.0045,
         -0.3841,  0.2174, -0.1227, -0.0880,  0.0327, -0.1893,  0.2660, -0.0587],
        [-0.1240, -0.2270, -0.1439, -0.1881, -0.1197, -0.1777, -0.2196, -0.3507,
         -0.1963, -0.1810,  0.3183, -0.4311,  0.3336, -0.1414,  0.3440, -0.3764],
        [ 0.0382, -0.1637, -0.2276, -0.3466,  0.2175, -0.1112, -0.2726, -0.4010,
         -0.2643,  0.1703, -0.0200, -0.0285, -0.0764,  0.1038,  0.0225, -0.1693],
        [ 0.3277, -0.0568, -0.1095, -0.4261,  0.2178, -0.0802, -0.2850,  0.4047,
         -0.3213, -0.1725,  0.3881,  0.1344, -0.2601, -0.1416,  0.1369,  0.3730],
        [-0.3405, -0.0577, -0.0071, -0.1611,  0.4301, -0.0821, -0.4323, -0.1218,
         -0.1358,  0.0175, -0.1834, -0.0356,  0.1311, -0.3489, -0.3285,  0.1926],
        [-0.1857,  0.3781, -0.1291, -0.2087,  0.3758,  0.0868,  0.0838, -0.1219,
         -0.3086, -0.0200,  0.1178,  0.2902,  0.3519, -0.0110,  0.0095,  0.2981],
        [ 0.1559,  0.1457,  0.0377, -0.2217,  0.0915,  0.2600,  0.4222, -0.1456,
         -0.0204, -0.1667,  0.2625,  0.1843, -0.1939,  0.2332,  0.0661, -0.2337],
        [-0.1967, -0.2194,  0.2359, -0.4241, -0.2180, -0.3223,  0.0776, -0.2728,
         -0.1728,  0.0495,  0.0545, -0.3943, -0.1789,  0.1569,  0.3014, -0.2196],
        [ 0.1048,  0.2971, -0.3913,  0.2233, -0.0802, -0.3493, -0.0528,  0.2271,
          0.2619,  0.3339,  0.0346,  0.4030,  0.3665,  0.0169, -0.2720,  0.3630]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.3.bias torch.Size([16]) Parameter containing:
tensor([ 0.2085, -0.1342,  0.2406, -0.1729, -0.0840, -0.2488,  0.1683,  0.1817,
         0.1155, -0.2393, -0.1982, -0.1630,  0.1581,  0.0107,  0.0215,  0.0219],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.4.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.4.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.5.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.5.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.6.weight torch.Size([16, 16]) Parameter containing:
tensor([[ 0.3231,  0.0473,  0.4306, -0.4151, -0.2756, -0.2972,  0.4084, -0.2877,
         -0.1804, -0.1056,  0.1853,  0.3784,  0.0078, -0.3851,  0.0227,  0.3394],
        [ 0.3807,  0.3419,  0.2950,  0.3076, -0.3771,  0.0529, -0.2136, -0.0657,
          0.1208,  0.1697, -0.2995,  0.0497, -0.4045, -0.1175,  0.0092,  0.2582],
        [ 0.3928,  0.2414,  0.1840, -0.1049,  0.3077,  0.0462, -0.2545, -0.0349,
          0.1674,  0.0418,  0.0254, -0.1344, -0.4283,  0.3061, -0.2861,  0.1243],
        [ 0.2502, -0.3481, -0.2618, -0.2889, -0.2254,  0.0799, -0.1201,  0.1996,
          0.4149, -0.0279,  0.2455,  0.1847, -0.1746,  0.1714, -0.1805, -0.3971],
        [ 0.0233,  0.0588,  0.4197, -0.3820, -0.3718,  0.2457, -0.0689,  0.2167,
          0.2349, -0.3160, -0.0772, -0.1765, -0.1600,  0.4135,  0.0416,  0.1745],
        [-0.1155, -0.1465,  0.2790, -0.1035,  0.3669, -0.0472, -0.3792,  0.2360,
          0.2226, -0.2592, -0.2294, -0.1707, -0.1227, -0.3708, -0.1543,  0.0536],
        [ 0.1004,  0.2242, -0.1606, -0.1265,  0.2244,  0.3069,  0.2506, -0.0248,
          0.0250,  0.0087, -0.2835,  0.3090, -0.4210, -0.3441,  0.2052,  0.1979],
        [ 0.4083,  0.2375,  0.1307, -0.1809, -0.1183, -0.0931,  0.0541, -0.2668,
         -0.1308,  0.4213, -0.2864, -0.1503, -0.0612,  0.0373,  0.1613,  0.3534],
        [-0.4023,  0.3703, -0.3154, -0.0313, -0.0699,  0.2619,  0.1693, -0.1988,
          0.3616,  0.3316, -0.3591,  0.3657, -0.3261,  0.1933,  0.3951, -0.0609],
        [ 0.1212,  0.2507, -0.0125,  0.1218,  0.3771, -0.3226, -0.0748,  0.2002,
         -0.0750,  0.3529, -0.4193, -0.2497, -0.0201, -0.3391,  0.0027,  0.0611],
        [ 0.1010,  0.4086, -0.1345,  0.0536, -0.2671,  0.1591,  0.3128,  0.2557,
          0.3917,  0.3830,  0.2745, -0.2389,  0.0150, -0.3220, -0.3912,  0.1793],
        [ 0.2904,  0.2578, -0.1004, -0.3467,  0.1591,  0.4130,  0.1693,  0.4117,
         -0.4296,  0.1060, -0.3933,  0.2452,  0.2423,  0.4100,  0.3648, -0.1507],
        [ 0.0979,  0.1010,  0.1452,  0.1989,  0.2456,  0.3704, -0.2550,  0.0082,
         -0.1256,  0.1293, -0.1885,  0.4001, -0.2813,  0.3298, -0.0329,  0.0501],
        [ 0.3599,  0.1926,  0.3670, -0.1530, -0.0468, -0.4226,  0.1578, -0.3081,
          0.2813, -0.4166,  0.2987,  0.3665,  0.2914,  0.0757,  0.1382, -0.0564],
        [ 0.2374,  0.3801, -0.1466,  0.0484, -0.2547, -0.2297,  0.3234,  0.0602,
         -0.1334, -0.3362,  0.3527, -0.0107, -0.3189,  0.4106,  0.2587, -0.3669],
        [ 0.4003, -0.2540, -0.0174,  0.0535, -0.3670,  0.0456, -0.3869,  0.2283,
         -0.3729,  0.2377, -0.0442, -0.2877, -0.0269,  0.1607,  0.0444, -0.2311]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.6.bias torch.Size([16]) Parameter containing:
tensor([-0.1074,  0.1065, -0.1543, -0.1754, -0.2309, -0.1288, -0.0438, -0.1965,
         0.0322,  0.2001, -0.0895,  0.0151, -0.0041,  0.0973,  0.0622, -0.0172],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.7.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.7.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.8.weight torch.Size([8, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.8.bias torch.Size([8]) Parameter containing:
tensor([-0.9182, -0.2266,  0.5165,  1.3177, -0.1094, -1.1451,  0.9856, -0.6998],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.0.weight torch.Size([16, 108]) Parameter containing:
tensor([[-0.1105,  0.1861,  0.0019,  ..., -0.0275, -0.1071, -0.1908],
        [-0.0523,  0.1464, -0.1782,  ..., -0.0900, -0.1903, -0.0312],
        [ 0.2124, -0.0175, -0.1379,  ..., -0.0015, -0.1902, -0.0773],
        ...,
        [ 0.0104,  0.2150,  0.1784,  ...,  0.0760, -0.1417,  0.0541],
        [ 0.1468,  0.0511, -0.1497,  ...,  0.1748,  0.0553,  0.0552],
        [-0.2024,  0.1366, -0.0142,  ..., -0.1415, -0.2190, -0.0433]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.0.bias torch.Size([16]) Parameter containing:
tensor([-0.0321,  0.0171, -0.0319,  0.0320,  0.0127,  0.0838, -0.0324,  0.0008,
        -0.0680,  0.0853, -0.0739, -0.0519, -0.0010,  0.0205,  0.0399,  0.0509],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.1.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.1.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.2.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.2.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.3.weight torch.Size([16, 16]) Parameter containing:
tensor([[ 1.9664e-02, -6.1214e-02,  1.9966e-01,  1.6891e-01,  1.0900e-01,
         -1.9250e-01, -9.9693e-02, -3.4894e-02, -2.5704e-01, -1.4763e-01,
         -3.7028e-01,  1.3851e-01,  4.2962e-01,  2.5728e-01,  3.1183e-01,
         -4.2771e-01],
        [ 2.1024e-01,  2.0473e-01,  1.8771e-01, -2.8076e-01, -2.6784e-01,
          2.4493e-01, -2.1249e-02, -2.6378e-01,  2.6143e-01,  3.9421e-01,
         -2.0903e-01, -2.8276e-01, -3.7245e-01, -3.7383e-01,  3.9491e-01,
         -4.7910e-02],
        [-1.6411e-01, -2.6488e-01, -3.4061e-02,  3.2647e-01,  1.4055e-01,
         -1.1736e-01, -1.9928e-01, -2.3434e-01, -2.8370e-01,  1.3885e-01,
         -3.2129e-02,  3.0671e-01, -1.9787e-01,  1.3380e-01, -2.5292e-01,
          2.0549e-01],
        [ 1.1047e-01,  4.1723e-01,  9.6804e-02,  5.2452e-02,  7.6051e-02,
          4.1891e-01,  9.0675e-02, -3.2387e-02, -2.5029e-01,  3.7476e-01,
          1.0259e-01, -4.0117e-01,  1.5437e-01, -1.8844e-01, -2.4919e-01,
          3.1555e-04],
        [ 2.2460e-01, -4.6310e-03,  3.3525e-01,  2.8705e-01, -1.3963e-01,
          4.4837e-02,  4.3041e-01, -1.5151e-01,  1.0439e-01,  4.2601e-01,
         -2.0042e-01, -3.4018e-01,  1.3368e-01, -3.6382e-01, -2.3820e-01,
          7.7301e-02],
        [ 1.0884e-01,  2.8502e-01,  7.3970e-02,  3.5250e-01, -9.5614e-02,
          2.0529e-01,  1.7596e-01,  1.0452e-01,  2.0761e-01,  2.3151e-01,
         -4.6908e-03,  1.0057e-01, -7.5618e-02,  3.6020e-01, -8.0403e-02,
          3.7238e-02],
        [-3.6483e-02, -8.8471e-02,  1.0779e-01, -1.7968e-01, -1.0528e-01,
         -1.2835e-01,  2.8522e-01,  1.2497e-02,  2.7189e-01, -4.2561e-01,
         -1.4531e-02,  3.3278e-01, -2.7561e-01,  3.8105e-01, -2.1912e-01,
         -5.7980e-02],
        [ 7.7308e-02,  1.6900e-01, -2.8303e-01, -1.3606e-01, -5.8022e-02,
         -1.5056e-02,  4.1137e-01, -1.6273e-01,  2.8229e-01, -2.7008e-01,
          1.3281e-02, -2.1127e-01, -1.1883e-01,  2.5891e-01, -1.6206e-01,
          1.2825e-01],
        [-1.2224e-01, -1.9920e-01,  1.6473e-01,  3.7487e-01, -4.1679e-01,
         -3.2145e-01, -4.3296e-01, -2.0082e-01,  2.4663e-01, -8.6929e-02,
          2.9428e-01,  2.1095e-01, -1.4126e-01, -3.3665e-01,  2.9618e-01,
         -4.1977e-01],
        [ 1.1730e-01,  2.6919e-01,  9.2563e-04, -2.7394e-01,  3.8649e-02,
         -1.0828e-01,  8.8409e-02,  1.3146e-01, -2.4962e-01, -1.7102e-01,
         -5.0387e-02, -3.9979e-01,  3.3993e-01, -3.3319e-01, -3.1004e-01,
         -1.1111e-03],
        [-6.5971e-02,  2.3582e-01, -1.5977e-01, -2.6679e-01, -2.7572e-01,
          1.4318e-01,  3.2069e-01,  1.9600e-01,  4.0399e-02, -1.1386e-01,
          3.2790e-01,  8.7895e-02, -1.2669e-01,  3.0480e-01, -2.6032e-01,
          3.4146e-01],
        [ 3.0301e-01,  6.7765e-02, -3.7845e-01,  4.0895e-01,  1.2951e-01,
          3.9062e-01,  2.3763e-01,  3.3729e-01, -3.2667e-01,  3.3813e-01,
          3.9383e-01, -2.4424e-01, -1.5881e-01, -3.0750e-02,  4.1528e-02,
         -1.2048e-01],
        [ 2.4763e-01, -5.8759e-02, -4.4421e-03, -8.0378e-03, -2.0926e-01,
          1.8930e-01,  3.9921e-01, -2.3003e-01, -3.8599e-01,  8.8400e-02,
          1.3832e-01,  4.4109e-02, -2.4187e-02, -3.8785e-01, -2.0101e-01,
         -3.9177e-01],
        [ 6.1452e-02, -1.3747e-01, -3.3649e-02,  2.0583e-01, -1.3888e-01,
         -2.0767e-01, -1.4764e-01,  1.1489e-01,  2.1131e-01, -2.0903e-01,
         -1.5633e-01, -2.4036e-01, -9.3854e-02, -2.3924e-01,  2.4936e-01,
          1.4644e-01],
        [-3.1654e-01,  1.9365e-01,  9.9140e-02, -3.1056e-01, -3.2576e-01,
         -2.0312e-01,  4.1450e-02, -1.7984e-01, -3.7416e-01,  8.0687e-02,
         -1.3979e-01,  2.0277e-01, -4.9907e-02, -1.7035e-01, -1.6664e-01,
          3.2431e-02],
        [-7.4806e-03,  2.1709e-01, -4.2638e-02, -3.3319e-01,  3.6431e-01,
          3.1080e-01, -1.8351e-01,  1.9073e-01,  2.6828e-01,  3.7646e-01,
          4.0558e-01,  2.8282e-01, -2.0170e-01,  1.2439e-01, -2.5929e-01,
         -1.1699e-01]], device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.3.bias torch.Size([16]) Parameter containing:
tensor([-1.8472e-02,  2.1273e-01,  6.1046e-02,  6.8828e-02,  7.9974e-02,
         1.4232e-01,  1.8390e-01, -6.3669e-02,  1.5783e-04,  2.1658e-01,
         6.8730e-02,  4.4764e-02,  3.2028e-02,  7.2142e-02, -8.7389e-02,
         1.1973e-01], device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.4.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.4.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.5.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.5.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.6.weight torch.Size([16, 16]) Parameter containing:
tensor([[ 1.4493e-01, -1.1948e-01,  4.1040e-02,  2.9011e-02, -2.6010e-01,
          4.3453e-04, -1.6094e-01, -1.0918e-01,  1.0034e-02, -3.7711e-01,
         -7.9510e-02,  3.3519e-01,  4.1285e-01, -2.0708e-01,  1.5462e-01,
          2.6859e-01],
        [ 1.0053e-01,  1.1284e-01, -3.3720e-01, -2.1096e-01,  3.5835e-01,
          3.5218e-01,  2.6903e-01, -3.0773e-01, -2.3767e-01, -2.0760e-01,
         -1.6145e-01, -2.1225e-01, -2.8982e-02, -5.6290e-02, -1.3541e-01,
          3.2479e-01],
        [-2.8384e-01,  2.1251e-01, -5.0646e-02, -2.6317e-01, -3.9995e-01,
          3.7215e-01, -4.8766e-02, -2.3691e-01,  3.1778e-01, -6.3908e-02,
          3.9637e-01, -2.4663e-01,  9.6589e-03, -5.6982e-02,  2.5569e-01,
          2.6477e-01],
        [-1.9298e-01, -4.0918e-02,  4.8300e-02, -5.5759e-02,  4.6055e-02,
          2.8616e-01, -1.2965e-01,  4.0990e-01,  1.2491e-01,  7.9320e-03,
         -1.1598e-01, -1.3813e-01, -4.0581e-01,  2.0495e-01,  2.1704e-01,
          2.4827e-01],
        [ 3.5841e-01, -2.2011e-01,  2.5376e-01,  7.7112e-03,  8.0555e-02,
         -2.2054e-03, -3.7054e-01,  2.5345e-01,  1.1080e-01, -9.9550e-02,
         -3.1303e-01, -3.4222e-01,  3.0741e-01,  1.2892e-01,  3.5343e-01,
         -1.9308e-02],
        [-1.8863e-01, -2.3259e-01, -3.0397e-01,  4.3986e-03,  6.7479e-02,
          3.0770e-01,  4.6849e-02, -3.4058e-01,  3.1208e-01,  4.0295e-02,
          7.7947e-02,  9.3464e-02,  9.3579e-02, -1.0455e-02,  3.6907e-01,
         -4.2597e-01],
        [ 3.5803e-01, -6.6319e-02, -2.2151e-01, -1.5305e-02,  2.9328e-01,
         -2.1377e-02,  2.2476e-01, -4.0015e-01, -4.1912e-01,  3.4426e-01,
         -5.6210e-02,  1.2479e-01, -1.6651e-01,  2.7642e-04,  2.7289e-01,
          2.0886e-01],
        [ 2.3628e-02, -3.4840e-01,  9.0154e-02,  1.6277e-02,  1.8236e-01,
          2.6191e-01, -1.7767e-03, -3.0343e-01,  3.6120e-01, -3.7933e-01,
          1.8160e-01, -3.7561e-01, -2.0306e-01, -1.8849e-01,  2.0359e-01,
          3.5836e-01],
        [ 2.1652e-01,  3.8420e-01, -5.1476e-02,  3.1551e-01, -5.8168e-02,
          3.5879e-01,  1.8630e-02, -3.1453e-02, -2.1661e-01, -2.7911e-01,
         -4.1262e-01, -1.6506e-01, -1.0740e-01,  4.9673e-02, -2.5765e-01,
          9.0124e-02],
        [ 1.2091e-01,  2.9702e-01,  1.8053e-01, -1.3586e-01, -1.6890e-01,
         -2.3982e-01,  2.9167e-01, -8.0308e-02, -4.5871e-02,  1.1428e-01,
         -3.6204e-01, -3.1564e-01,  4.0901e-01,  2.8273e-01, -1.8014e-01,
         -2.6317e-02],
        [ 3.8298e-01, -5.8995e-02, -2.1295e-01,  1.2099e-01, -6.2233e-03,
         -3.7343e-01,  1.5247e-01, -3.0502e-02, -3.6315e-01, -3.7209e-01,
          2.9423e-01,  1.8892e-02, -2.7570e-01,  3.5714e-01,  1.9648e-01,
          9.7437e-02],
        [ 2.9791e-01, -2.8869e-01, -2.1201e-01, -1.1115e-01, -5.4077e-02,
          4.2422e-02,  1.0547e-02,  1.5842e-01, -1.7931e-02, -4.2254e-01,
         -3.4499e-01, -1.1628e-01, -3.6456e-01,  8.7370e-02, -4.0249e-01,
         -3.1723e-01],
        [-1.5046e-02, -4.0204e-01, -3.9301e-01, -3.7771e-01, -3.5889e-01,
         -4.8013e-02, -1.9304e-01, -4.1520e-01,  1.5720e-01, -2.5623e-01,
          2.2064e-01,  8.8620e-02, -3.7398e-01, -2.6728e-01,  3.7523e-01,
         -6.2069e-02],
        [-8.3565e-02, -2.3315e-01,  3.5307e-05,  1.5294e-01,  3.3053e-01,
         -1.6909e-01, -5.7275e-03, -1.9860e-01, -9.4962e-02, -1.0949e-01,
         -1.8193e-01, -1.8768e-01,  3.6137e-01,  8.6231e-02, -2.5113e-01,
         -4.1383e-02],
        [ 7.2350e-02,  3.3796e-01, -1.6833e-01, -3.0721e-01, -1.1329e-02,
          2.0119e-01, -4.2966e-01,  1.1688e-01,  3.1818e-01, -2.2786e-01,
         -2.5156e-01,  8.9198e-02,  4.1369e-01, -3.8491e-01, -4.1690e-01,
         -6.1382e-02],
        [-1.8292e-01,  2.6596e-01,  1.7063e-01, -4.2410e-01, -7.1943e-02,
         -2.6655e-01,  3.6435e-01, -1.0021e-01, -2.2487e-01, -3.6079e-01,
         -1.1344e-01, -1.7970e-01,  3.1945e-01, -1.2350e-01,  4.2754e-01,
         -1.8785e-01]], device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.6.bias torch.Size([16]) Parameter containing:
tensor([-0.0446, -0.1719, -0.0603, -0.0830, -0.0536, -0.1674, -0.1327, -0.1625,
         0.1330, -0.1969,  0.1877,  0.1896,  0.1413,  0.0528,  0.0825, -0.2383],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.7.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.7.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.8.weight torch.Size([8, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_1.net.8.bias torch.Size([8]) Parameter containing:
tensor([ 0.1553,  1.2696, -0.0043,  0.0211,  0.0926, -0.8793,  0.5756,  0.5902],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.0.weight torch.Size([16, 108]) Parameter containing:
tensor([[ 0.1961,  0.0385, -0.1285,  ..., -0.0504, -0.0963,  0.0447],
        [ 0.1943,  0.1312,  0.1954,  ...,  0.1560, -0.1592, -0.1092],
        [-0.1025,  0.0891,  0.0878,  ..., -0.1514, -0.1058, -0.1452],
        ...,
        [-0.2139,  0.1150, -0.0284,  ..., -0.0318,  0.1814, -0.2054],
        [-0.0881, -0.1625, -0.1485,  ..., -0.0758,  0.1494, -0.0282],
        [-0.1226,  0.0814,  0.0680,  ..., -0.0576, -0.0754,  0.1296]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.0.bias torch.Size([16]) Parameter containing:
tensor([-0.0231,  0.0149, -0.0956,  0.0401, -0.0538, -0.0941, -0.0638, -0.0398,
         0.0768, -0.0090,  0.0162, -0.0667, -0.0212, -0.0211, -0.0315, -0.0123],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.1.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.1.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.2.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.2.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.3.weight torch.Size([16, 16]) Parameter containing:
tensor([[-0.0507,  0.3469, -0.0854, -0.3391, -0.0467, -0.3637,  0.2676,  0.2102,
          0.1400,  0.2928,  0.3758,  0.0716,  0.1861, -0.4107, -0.3414,  0.0244],
        [ 0.4198,  0.2981,  0.2064,  0.3054,  0.3861,  0.1974,  0.0805,  0.3659,
          0.2648, -0.0440, -0.0057, -0.3547,  0.1627, -0.1862,  0.2501,  0.0158],
        [ 0.1546,  0.1700, -0.1258, -0.0976,  0.3695, -0.0030, -0.0637, -0.0910,
         -0.1570,  0.3812,  0.4025, -0.4261, -0.2824, -0.2914,  0.1594,  0.3081],
        [ 0.0028,  0.4214,  0.2674,  0.3667,  0.0575,  0.0865, -0.1673, -0.0260,
          0.3856, -0.1615, -0.2552,  0.1436, -0.1701,  0.0259, -0.1775, -0.2776],
        [-0.0914, -0.1488, -0.1622, -0.1694, -0.2355, -0.3738,  0.0621,  0.0209,
         -0.0709,  0.0774,  0.3679, -0.1727, -0.1307, -0.2540, -0.2003, -0.1266],
        [ 0.2982, -0.1082,  0.2240, -0.3531, -0.0844, -0.1007, -0.3640,  0.0525,
          0.0784,  0.3226,  0.3125, -0.4097,  0.1700,  0.0969,  0.4045, -0.1306],
        [ 0.2985,  0.2421,  0.2847,  0.0085,  0.3896, -0.1063, -0.3550,  0.1941,
          0.0284, -0.2078, -0.3085,  0.2965,  0.1854, -0.3239, -0.3160,  0.3891],
        [-0.1889,  0.4193, -0.2451, -0.3744, -0.3961,  0.2083,  0.2639, -0.4161,
          0.0017, -0.2470, -0.0554,  0.0388, -0.0681,  0.3374,  0.0974,  0.2165],
        [-0.0689, -0.0491,  0.0927, -0.1693, -0.0617,  0.2859,  0.0884, -0.1691,
         -0.3340,  0.0141,  0.2807,  0.1787,  0.4060, -0.0560,  0.0832,  0.2473],
        [ 0.4022, -0.3502, -0.4049, -0.0613,  0.3625, -0.0603,  0.1603,  0.1562,
         -0.0111, -0.1116,  0.1427, -0.2778, -0.1258,  0.3721,  0.4077,  0.2138],
        [-0.0571,  0.1645, -0.1799,  0.4174, -0.3059,  0.0926, -0.2246, -0.3093,
         -0.2375,  0.1650, -0.1772, -0.4056, -0.2618, -0.2851,  0.3331,  0.1525],
        [ 0.0045,  0.0361, -0.4318, -0.2257, -0.2433, -0.0941,  0.3035,  0.1904,
          0.3090,  0.3473, -0.0529,  0.1685, -0.0044,  0.2764,  0.0473,  0.2965],
        [-0.1378, -0.3630,  0.2503,  0.1598, -0.1218, -0.0209,  0.0570,  0.3657,
         -0.0246,  0.3474,  0.1293, -0.0786, -0.0413, -0.1947,  0.2040,  0.2151],
        [ 0.2622, -0.4125,  0.1410,  0.1703,  0.3707,  0.0313, -0.3460, -0.2349,
          0.3750, -0.3156, -0.2952,  0.3613, -0.3382,  0.3004,  0.1804,  0.2895],
        [ 0.1297,  0.3308,  0.3690,  0.1039,  0.3048,  0.3955, -0.0550, -0.3480,
          0.1505, -0.1103,  0.2951,  0.2485,  0.3984,  0.0748,  0.1635, -0.3805],
        [ 0.0776, -0.2698, -0.0919,  0.0565, -0.1451, -0.3636,  0.1914,  0.1852,
          0.1115,  0.3650,  0.0485, -0.3565, -0.0428,  0.2974,  0.4150,  0.2812]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.3.bias torch.Size([16]) Parameter containing:
tensor([-0.1672,  0.1240, -0.1513,  0.1392, -0.1167,  0.1389,  0.1494, -0.0207,
         0.0414, -0.1302, -0.1108, -0.1694,  0.2095,  0.1381,  0.1802, -0.0923],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.4.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.4.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.5.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.5.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.6.weight torch.Size([16, 16]) Parameter containing:
tensor([[-0.0121, -0.2909,  0.2122,  0.3036,  0.1702,  0.1196,  0.0158,  0.1056,
         -0.2518, -0.1300,  0.2252, -0.3776, -0.3795, -0.1232, -0.3364, -0.0390],
        [ 0.2821,  0.2429,  0.3293,  0.1830, -0.2229, -0.1061,  0.2055, -0.2703,
         -0.0080, -0.3343, -0.0985, -0.0862, -0.0279,  0.3114,  0.0606, -0.2475],
        [ 0.0540, -0.2215, -0.0930,  0.1598,  0.3459,  0.0203,  0.1258,  0.3435,
          0.0292,  0.0528,  0.2975, -0.0610, -0.1009, -0.2681,  0.2694,  0.3718],
        [-0.3707, -0.0028, -0.0373,  0.4104,  0.0395, -0.3448, -0.0390, -0.0806,
         -0.0166, -0.2967,  0.2930,  0.3576, -0.2966,  0.0414,  0.2956, -0.3029],
        [-0.0733, -0.3399,  0.2567, -0.0216,  0.1265,  0.3805, -0.3480,  0.2185,
          0.1040, -0.2181, -0.0749,  0.0204,  0.3891,  0.4088, -0.1715, -0.3426],
        [-0.0557, -0.0361,  0.3487, -0.1461, -0.2499,  0.3030,  0.4310, -0.2366,
         -0.3625, -0.1693,  0.4155, -0.2386, -0.2734,  0.1687, -0.3874,  0.2499],
        [-0.1276,  0.1455,  0.1818,  0.1356, -0.4325,  0.0517, -0.2681, -0.1964,
         -0.3764, -0.2354,  0.0919, -0.4282,  0.4284, -0.0330,  0.1630, -0.2713],
        [ 0.2292,  0.3860,  0.0609,  0.0603,  0.2527,  0.3930,  0.0051,  0.2966,
          0.3544,  0.0348,  0.3555, -0.0913,  0.3251,  0.2472, -0.1621, -0.2940],
        [-0.2196,  0.0165,  0.3086, -0.0918,  0.3498, -0.0118,  0.3976, -0.4313,
         -0.3932,  0.4043, -0.2575, -0.0304,  0.2640, -0.3160, -0.2290,  0.2352],
        [ 0.1623, -0.2716, -0.3091, -0.2896, -0.1375,  0.3632,  0.1573, -0.2623,
          0.1303,  0.2377,  0.0355,  0.3286,  0.0039,  0.3995,  0.3966,  0.0231],
        [-0.0544,  0.1232, -0.3028,  0.2151, -0.0741,  0.1393, -0.1151,  0.2377,
          0.0263,  0.4224,  0.2414,  0.0442, -0.4217,  0.3038, -0.4110, -0.3025],
        [-0.1725,  0.0168, -0.1787, -0.1897, -0.1899, -0.2604,  0.1486, -0.4048,
         -0.3679,  0.0457, -0.2347,  0.0872,  0.0020,  0.2268,  0.3918, -0.2875],
        [-0.0237, -0.3716, -0.2985,  0.1661,  0.0196, -0.1494,  0.3833,  0.0121,
          0.0952,  0.1291,  0.0952, -0.0025,  0.2850,  0.1671,  0.1915,  0.3543],
        [-0.3584,  0.3637,  0.3146, -0.3735, -0.2464, -0.1536,  0.0447, -0.2388,
          0.3055, -0.1499, -0.1200, -0.4248,  0.2758,  0.0189,  0.0817,  0.0284],
        [ 0.2225, -0.0626, -0.3337, -0.2781, -0.1690,  0.0827,  0.2452, -0.1650,
         -0.1160,  0.0961, -0.0593, -0.0295,  0.2361,  0.1356, -0.2485,  0.2820],
        [-0.1721,  0.1506,  0.2430, -0.1792,  0.0907,  0.1208, -0.2802, -0.2953,
         -0.1275,  0.0802, -0.1974,  0.0780,  0.0652,  0.2620, -0.1167,  0.3493]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.6.bias torch.Size([16]) Parameter containing:
tensor([ 0.2171, -0.1508,  0.0125,  0.0079,  0.1871, -0.0287, -0.2277,  0.2234,
        -0.1381,  0.1167, -0.0426,  0.1004,  0.2290, -0.0975,  0.1735,  0.0171],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.7.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.7.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.8.weight torch.Size([8, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_2.net.8.bias torch.Size([8]) Parameter containing:
tensor([ 0.6776, -1.2495,  1.0996,  0.2494,  0.1206, -1.3224, -0.0976,  0.6648],
       device='cuda:0', requires_grad=True)
outnn.net.0.weight torch.Size([64, 108]) Parameter containing:
tensor([[ 0.1302, -0.0886,  0.1251,  ..., -0.1452,  0.1338,  0.1303],
        [ 0.0125,  0.1107,  0.1744,  ..., -0.1104, -0.0590, -0.1384],
        [-0.0206,  0.0489, -0.0378,  ...,  0.1233, -0.0881,  0.1734],
        ...,
        [-0.0119, -0.0723, -0.0003,  ..., -0.0020, -0.0354, -0.1023],
        [-0.1537, -0.1086, -0.0217,  ...,  0.1002,  0.0813, -0.1609],
        [-0.0484,  0.0393, -0.1135,  ...,  0.0704,  0.0786, -0.0061]],
       device='cuda:0', requires_grad=True)
outnn.net.0.bias torch.Size([64]) Parameter containing:
tensor([-5.5933e-02, -3.8752e-02,  4.0607e-05,  8.2930e-02,  9.5586e-02,
        -1.2221e-02,  5.1079e-02, -8.7594e-02, -6.6015e-02, -4.2637e-02,
        -9.3795e-02, -4.0770e-02,  4.3465e-02, -8.9147e-03, -7.6858e-02,
         2.3570e-02,  4.7478e-02,  3.4461e-02, -6.3155e-02, -2.8177e-02,
        -2.0288e-02, -3.5147e-02, -2.7028e-02, -1.0187e-02,  9.6125e-02,
         8.3881e-02, -1.7950e-02,  5.8301e-02, -4.1345e-02, -3.7775e-02,
         9.0912e-02, -6.5844e-03,  7.4558e-02, -8.8207e-02,  8.6782e-02,
        -6.9309e-02,  8.9283e-03, -5.5827e-02, -3.7109e-02, -3.3086e-02,
         7.3843e-02,  2.5980e-02,  7.8131e-02, -7.2795e-02,  7.3184e-02,
         4.1502e-02,  6.1462e-02, -3.4301e-02,  2.1106e-02, -5.9494e-02,
         9.4243e-02, -5.0128e-02,  4.7787e-02, -3.4651e-03,  9.8309e-03,
         3.6365e-02, -9.6749e-03, -6.1909e-02, -9.1674e-02,  4.0300e-02,
         9.3676e-02, -1.8586e-02,  2.8125e-02, -8.2648e-02], device='cuda:0',
       requires_grad=True)
outnn.net.1.alpha torch.Size([1, 64]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]], device='cuda:0',
       requires_grad=True)
outnn.net.1.beta torch.Size([1, 64]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093]], device='cuda:0', requires_grad=True)
outnn.net.2.weight torch.Size([64]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True)
outnn.net.2.bias torch.Size([64]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
outnn.net.3.weight torch.Size([64, 64]) Parameter containing:
tensor([[ 0.1898, -0.1754,  0.0505,  ..., -0.0743, -0.1184,  0.1611],
        [ 0.2041,  0.1895, -0.0164,  ...,  0.1500, -0.1298,  0.1306],
        [-0.0113, -0.1428, -0.1906,  ..., -0.2108, -0.1522,  0.0821],
        ...,
        [-0.0030, -0.2101,  0.1724,  ...,  0.0840,  0.1259, -0.1451],
        [ 0.1264,  0.1318, -0.2132,  ..., -0.0922,  0.1489,  0.1570],
        [ 0.1420,  0.1019,  0.1506,  ...,  0.1032,  0.1119, -0.0205]],
       device='cuda:0', requires_grad=True)
outnn.net.3.bias torch.Size([64]) Parameter containing:
tensor([-0.0325,  0.0540,  0.1113,  0.1025,  0.0991, -0.0375,  0.1100, -0.0363,
         0.0945, -0.0276,  0.0400, -0.0549,  0.1241, -0.0276,  0.0081,  0.0008,
        -0.1009,  0.0427,  0.1230,  0.0492,  0.0282, -0.1057,  0.0796, -0.0521,
        -0.1138,  0.0454, -0.1022,  0.0065, -0.0819,  0.1225,  0.0600,  0.0432,
        -0.0365, -0.0878,  0.0567, -0.0366,  0.0927, -0.0852, -0.1185,  0.0370,
        -0.0278, -0.0953, -0.0173, -0.1215,  0.0160,  0.0914,  0.0767, -0.0583,
         0.0335, -0.1185, -0.0888,  0.0594, -0.0925, -0.0592, -0.0660, -0.0153,
         0.0053,  0.1121, -0.0460, -0.0944,  0.0535, -0.0278,  0.0345,  0.0993],
       device='cuda:0', requires_grad=True)
outnn.net.4.alpha torch.Size([1, 64]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]], device='cuda:0',
       requires_grad=True)
outnn.net.4.beta torch.Size([1, 64]) Parameter containing:
tensor([[0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156]], device='cuda:0', requires_grad=True)
outnn.net.5.weight torch.Size([64]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True)
outnn.net.5.bias torch.Size([64]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
outnn.net.6.weight torch.Size([64, 64]) Parameter containing:
tensor([[-0.0065, -0.1003, -0.2100,  ...,  0.0454, -0.0034, -0.1871],
        [-0.0011, -0.2103, -0.0401,  ...,  0.1036,  0.1458, -0.0688],
        [ 0.0552, -0.0833, -0.1443,  ...,  0.0377, -0.1513, -0.1937],
        ...,
        [-0.0826,  0.0551,  0.2165,  ..., -0.0048,  0.0228,  0.2121],
        [-0.0515,  0.0116, -0.0724,  ...,  0.0998,  0.0247, -0.0517],
        [-0.1068,  0.0489,  0.1339,  ...,  0.1571, -0.1000,  0.0976]],
       device='cuda:0', requires_grad=True)
outnn.net.6.bias torch.Size([64]) Parameter containing:
tensor([ 0.0179,  0.0493, -0.0156,  0.0895,  0.0531, -0.0935, -0.0897,  0.1129,
         0.0171, -0.0028,  0.0919,  0.0342,  0.0371, -0.0199,  0.0945,  0.0489,
         0.0516,  0.0832, -0.0023, -0.1205, -0.0589, -0.0504,  0.0803,  0.0478,
         0.0236,  0.1059, -0.0886,  0.0383, -0.0983,  0.0036,  0.1241, -0.0926,
        -0.0965,  0.1007, -0.0347, -0.0261,  0.0863,  0.0801, -0.1012, -0.1085,
         0.0278, -0.0090, -0.0807,  0.0345, -0.0898, -0.1193,  0.0556, -0.0371,
        -0.0380, -0.1161, -0.1157, -0.0081,  0.0999, -0.0074, -0.0967, -0.0042,
        -0.0808,  0.1053, -0.0403,  0.0936, -0.0269, -0.0271, -0.0750,  0.0426],
       device='cuda:0', requires_grad=True)
outnn.net.7.alpha torch.Size([1, 64]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]], device='cuda:0',
       requires_grad=True)
outnn.net.7.beta torch.Size([1, 64]) Parameter containing:
tensor([[0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156, 0.0156,
         0.0156]], device='cuda:0', requires_grad=True)
outnn.net.8.weight torch.Size([1, 64]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
outnn.net.8.bias torch.Size([1]) Parameter containing:
tensor([1.], device='cuda:0', requires_grad=True)
