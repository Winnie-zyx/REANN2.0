300 -156.33706057752667 3 5.0 108 8 3 [118, 64] True 1 3 [108, 16, 16] [0. 0. 0. 0.] True
contracted_coeff torch.Size([2, 3, 8, 108]) Parameter containing:
tensor([[[[ 1.8087e-02,  3.4145e-02,  4.7705e-03,  ..., -3.5755e-03,
            1.3101e-02,  2.8850e-02],
          [ 2.9756e-02,  3.2441e-03, -3.8014e-03,  ..., -3.2277e-02,
            3.3882e-03, -7.9435e-03],
          [-1.6166e-02, -1.6922e-02,  2.3833e-02,  ..., -1.8791e-02,
           -2.3032e-02,  3.0008e-02],
          ...,
          [-5.1128e-03,  3.2316e-02,  3.4410e-02,  ...,  5.5499e-03,
           -2.0069e-02,  1.2566e-02],
          [ 3.9371e-03, -7.9571e-03, -8.1705e-03,  ...,  1.6841e-02,
            3.6494e-02,  2.7791e-02],
          [ 2.9085e-02,  3.6013e-02,  2.1272e-02,  ..., -3.2154e-03,
           -3.5047e-02,  3.5364e-02]],

         [[-1.1867e-02,  5.6253e-03, -2.5322e-02,  ..., -2.0111e-02,
            2.1749e-02,  1.9935e-02],
          [-9.7224e-03,  6.5959e-03,  1.2515e-02,  ..., -1.4324e-03,
            6.7791e-03, -3.2220e-02],
          [ 2.5348e-02, -1.0475e-02,  2.7881e-02,  ..., -4.4335e-03,
           -3.0118e-02,  3.4420e-02],
          ...,
          [-1.2511e-02, -1.1192e-02,  2.7292e-02,  ..., -1.8781e-03,
            3.6216e-02,  2.5438e-02],
          [-8.7202e-03, -3.6282e-02,  2.2867e-02,  ...,  1.4246e-02,
            3.7341e-05, -3.6525e-02],
          [ 9.1655e-03,  1.2256e-02,  3.2725e-02,  ..., -2.7793e-02,
            7.6412e-03, -8.9187e-03]],

         [[ 2.2882e-02, -1.5321e-03, -2.0146e-02,  ..., -2.6785e-02,
            2.0734e-02,  2.6213e-02],
          [ 1.8623e-02, -2.3323e-02, -9.6023e-03,  ..., -3.0329e-02,
           -9.1207e-03,  2.7473e-02],
          [ 4.4983e-03, -1.8603e-02,  3.6955e-02,  ...,  1.4331e-03,
           -1.1582e-02, -1.9590e-02],
          ...,
          [ 4.2174e-03,  1.6073e-02,  2.8812e-02,  ...,  1.8591e-02,
            3.0013e-02,  2.2294e-02],
          [-3.4056e-02, -1.9204e-03,  2.7511e-02,  ...,  2.6039e-02,
            3.3469e-02, -3.6997e-02],
          [-3.0736e-02, -2.5759e-02, -2.1590e-02,  ..., -1.9600e-02,
           -2.2747e-02, -4.1761e-03]]],


        [[[ 2.0899e-02,  1.4182e-02,  1.2356e-02,  ...,  3.2724e-02,
            3.6650e-02,  2.2341e-02],
          [-2.8236e-02, -3.4683e-02,  1.1582e-02,  ...,  1.1924e-02,
            3.0215e-02,  2.2540e-02],
          [ 1.6698e-02, -3.3032e-02,  2.8523e-02,  ..., -3.1019e-02,
           -3.3529e-02, -1.7259e-02],
          ...,
          [ 3.3070e-02,  3.3437e-02, -2.3665e-02,  ...,  3.4156e-02,
           -2.2339e-02,  5.7797e-03],
          [ 1.2719e-02, -2.4918e-02,  1.0245e-02,  ...,  3.5231e-03,
            2.8895e-02,  1.7108e-02],
          [ 2.1320e-02, -4.6917e-03,  2.3830e-02,  ...,  3.3867e-02,
            2.0165e-02, -3.4048e-02]],

         [[-1.8893e-02, -2.0871e-02,  1.4812e-02,  ..., -3.3349e-03,
            6.7682e-04,  3.6388e-02],
          [-3.0789e-02,  3.6739e-02, -5.0383e-03,  ...,  3.6165e-02,
           -3.0586e-02,  1.8684e-02],
          [ 2.3894e-02, -6.7664e-04, -1.4950e-02,  ..., -4.4306e-03,
           -1.4860e-02, -4.0720e-03],
          ...,
          [-2.5085e-02,  1.2635e-03, -2.1636e-02,  ...,  2.5504e-02,
            2.5833e-03, -3.5338e-02],
          [ 2.5642e-02, -3.5563e-02, -2.9208e-02,  ..., -2.8695e-02,
            1.6986e-02, -8.9757e-03],
          [ 2.0412e-02,  2.2887e-02, -2.2316e-02,  ..., -1.6308e-02,
            2.2496e-04,  7.0283e-03]],

         [[-1.7482e-02, -3.0134e-02,  3.3335e-02,  ..., -2.7639e-02,
           -2.0064e-02, -2.4204e-02],
          [-2.8679e-02, -8.8737e-03, -2.6813e-02,  ..., -1.0747e-02,
           -2.3005e-03, -5.9503e-03],
          [ 1.8792e-03,  1.0346e-02,  3.6320e-02,  ..., -1.1310e-02,
           -9.5767e-03, -1.4825e-02],
          ...,
          [-1.4661e-02, -3.3390e-02,  2.6395e-02,  ...,  3.2514e-02,
           -2.0102e-02, -7.0677e-03],
          [-2.9457e-02,  2.4377e-02,  7.4555e-04,  ...,  7.8456e-03,
           -1.0468e-03,  1.8963e-02],
          [ 3.2083e-02,  3.4183e-02,  1.4980e-02,  ...,  2.4586e-02,
           -1.1113e-02, -1.3897e-02]]]], device='cuda:0', requires_grad=True)
emb_neighnn.net.0.weight torch.Size([64, 118]) Parameter containing:
tensor([[ 0.1547,  0.0222,  0.0024,  ..., -0.0117,  0.1476, -0.0805],
        [-0.1321, -0.0405, -0.1551,  ...,  0.0922, -0.0755,  0.0094],
        [-0.0989, -0.0109,  0.1469,  ..., -0.0302,  0.1167, -0.1353],
        ...,
        [ 0.0313, -0.1078, -0.0290,  ...,  0.1470,  0.1226, -0.0579],
        [ 0.1137,  0.1290, -0.0355,  ...,  0.0445,  0.1226, -0.0657],
        [ 0.0121, -0.1412,  0.0741,  ..., -0.1729, -0.1111, -0.0491]],
       device='cuda:0', requires_grad=True)
emb_neighnn.net.0.bias torch.Size([64]) Parameter containing:
tensor([-0.0022,  0.0129,  0.0745, -0.0207,  0.0155,  0.0750, -0.0642,  0.0698,
        -0.0870, -0.0686, -0.0567, -0.0535,  0.0192,  0.0114, -0.0388,  0.0380,
         0.0250, -0.0235,  0.0039,  0.0786,  0.0564, -0.0188, -0.0056,  0.0220,
        -0.0385, -0.0450, -0.0449,  0.0504,  0.0360, -0.0872, -0.0239, -0.0564,
         0.0464, -0.0574,  0.0888,  0.0281,  0.0804,  0.0480,  0.0094, -0.0075,
        -0.0313, -0.0561,  0.0785, -0.0165,  0.0245, -0.0594,  0.0504, -0.0595,
        -0.0061, -0.0757,  0.0775, -0.0521,  0.0520, -0.0368, -0.0681,  0.0738,
        -0.0747, -0.0898,  0.0759,  0.0125,  0.0849, -0.0871, -0.0913, -0.0276],
       device='cuda:0', requires_grad=True)
emb_neighnn.net.4.alpha torch.Size([1, 64]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]], device='cuda:0',
       requires_grad=True)
emb_neighnn.net.4.beta torch.Size([1, 64]) Parameter containing:
tensor([[0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085]], device='cuda:0', requires_grad=True)
emb_neighnn.net.5.weight torch.Size([24, 64]) Parameter containing:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0', requires_grad=True)
emb_neighnn.net.5.bias torch.Size([24]) Parameter containing:
tensor([-1.2700e-06,  1.9933e-03, -5.4518e-03,  8.4706e-04,  3.3146e-03,
        -1.4338e-03,  8.1155e-04,  2.5256e-03,  1.0000e+00,  1.0000e+00,
         1.0000e+00,  1.0000e+00,  1.0000e+00,  1.0000e+00,  1.0000e+00,
         1.0000e+00,  1.7908e+00,  1.4177e-01,  1.4404e+00,  1.6604e+00,
         1.5324e+00,  9.8035e-01,  9.7904e-01,  1.4172e+00], device='cuda:0',
       requires_grad=True)
emb_centernn.net.0.weight torch.Size([64, 118]) Parameter containing:
tensor([[ 0.0806, -0.0485, -0.1733,  ..., -0.0435, -0.1619, -0.1189],
        [-0.1741, -0.0313, -0.1115,  ...,  0.1464, -0.0076, -0.0525],
        [ 0.0768,  0.0789, -0.1566,  ..., -0.1494, -0.1461,  0.1233],
        ...,
        [ 0.0224, -0.1372,  0.1806,  ...,  0.0248, -0.0311, -0.1185],
        [-0.0680, -0.0119,  0.1412,  ..., -0.0944, -0.1328, -0.1014],
        [-0.1721,  0.0334, -0.1450,  ..., -0.1682,  0.1394,  0.1047]],
       device='cuda:0', requires_grad=True)
emb_centernn.net.0.bias torch.Size([64]) Parameter containing:
tensor([ 0.0657,  0.0870, -0.0341, -0.0106, -0.0045,  0.0470, -0.0827, -0.0438,
         0.0266, -0.0339,  0.0480, -0.0569, -0.0255, -0.0509,  0.0824,  0.0778,
         0.0163, -0.0532,  0.0727,  0.0667,  0.0216,  0.0005, -0.0767, -0.0712,
         0.0241,  0.0529, -0.0248,  0.0117, -0.0140, -0.0535,  0.0784, -0.0553,
        -0.0528,  0.0544, -0.0852,  0.0201, -0.0485, -0.0638,  0.0271, -0.0878,
        -0.0489,  0.0087, -0.0608, -0.0435, -0.0390,  0.0334, -0.0244,  0.0373,
        -0.0708, -0.0095, -0.0491, -0.0013, -0.0792,  0.0030, -0.0833, -0.0237,
         0.0786, -0.0860,  0.0128,  0.0731,  0.0367,  0.0028, -0.0033,  0.0492],
       device='cuda:0', requires_grad=True)
emb_centernn.net.4.alpha torch.Size([1, 64]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]], device='cuda:0',
       requires_grad=True)
emb_centernn.net.4.beta torch.Size([1, 64]) Parameter containing:
tensor([[0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085, 0.0085,
         0.0085]], device='cuda:0', requires_grad=True)
emb_centernn.net.5.weight torch.Size([108, 64]) Parameter containing:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0', requires_grad=True)
emb_centernn.net.5.bias torch.Size([108]) Parameter containing:
tensor([-1.4465e-03,  3.0620e-03,  4.3638e-03, -4.9972e-03, -1.1826e-03,
         8.6499e-05,  4.7741e-03,  2.0076e-03, -5.6207e-04,  1.5130e-03,
        -5.8963e-05,  1.4667e-03, -4.2461e-03,  3.0967e-03, -8.3958e-04,
        -4.3577e-03,  9.4638e-04, -3.0355e-03,  4.0772e-03,  2.7484e-03,
        -7.5285e-04, -9.4206e-03,  5.3993e-03, -1.2040e-03, -8.0295e-04,
         6.7102e-04,  1.0592e-03, -1.6266e-03,  6.1137e-03,  6.0650e-03,
        -1.9104e-03, -1.0786e-03,  2.4276e-04, -1.6854e-03, -2.7486e-03,
        -3.9905e-03,  9.5205e-04,  4.3732e-04,  2.3753e-05, -2.5053e-03,
        -3.7670e-03, -1.5327e-04, -5.4392e-03,  2.2742e-03,  2.5776e-03,
        -6.0190e-03, -1.1674e-03,  5.5952e-04,  5.1238e-04,  3.0530e-03,
         4.0463e-03, -1.9668e-03, -3.3091e-03, -7.0334e-04,  3.8834e-04,
        -2.1128e-03,  1.9687e-03, -9.8691e-04, -5.1186e-03,  1.7450e-03,
         3.2144e-03, -4.7337e-03, -5.6433e-03, -4.8059e-03,  3.1943e-03,
         9.4969e-04, -2.1870e-03, -1.7548e-03, -3.2267e-03, -2.3241e-03,
        -3.6306e-03, -5.0719e-03,  1.4784e-03, -6.7695e-04,  3.0733e-03,
         3.5894e-05, -3.2615e-03,  1.1725e-03, -3.6802e-03, -3.8971e-03,
         3.7712e-03,  1.7793e-03, -4.2953e-03, -3.6886e-04,  3.3769e-03,
         6.0884e-03, -3.4067e-04,  3.9602e-04,  1.5155e-03,  9.5452e-04,
         1.4486e-03,  3.6556e-04, -2.2901e-03, -1.9918e-04, -3.5930e-03,
         1.7282e-03,  3.7590e-03,  2.0675e-03, -7.2207e-03,  3.7493e-03,
         1.9398e-03,  2.0421e-03, -8.0177e-04, -9.0347e-04, -5.8458e-03,
        -1.3162e-03, -5.2208e-03,  4.7704e-04], device='cuda:0',
       requires_grad=True)
ocmod.memssage_0.net.0.weight torch.Size([16, 108]) Parameter containing:
tensor([[-0.1058, -0.1141, -0.2123,  ..., -0.0523,  0.1407,  0.0448],
        [ 0.1918,  0.0372,  0.0858,  ..., -0.1125,  0.1686, -0.1560],
        [-0.1166, -0.0237,  0.0007,  ..., -0.0170, -0.1584, -0.0095],
        ...,
        [-0.2115, -0.0241,  0.1526,  ..., -0.1545,  0.1601,  0.0457],
        [ 0.1914, -0.1804, -0.0865,  ...,  0.2122, -0.0042,  0.0837],
        [ 0.0413, -0.1711,  0.1367,  ..., -0.0158, -0.2087, -0.1565]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.0.bias torch.Size([16]) Parameter containing:
tensor([ 0.0934, -0.0795,  0.0176, -0.0394,  0.0109, -0.0022,  0.0854,  0.0336,
        -0.0674, -0.0027,  0.0232,  0.0296, -0.0488,  0.0175,  0.0495,  0.0738],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.1.resblock.0.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.1.resblock.0.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.1.resblock.1.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.1.resblock.1.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.1.resblock.2.weight torch.Size([16, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.1.resblock.2.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.2.resblock.0.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.2.resblock.0.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.2.resblock.1.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.2.resblock.1.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.2.resblock.2.weight torch.Size([16, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.2.resblock.2.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.3.resblock.0.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.3.resblock.0.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.3.resblock.1.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.3.resblock.1.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.3.resblock.2.weight torch.Size([16, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.3.resblock.2.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.4.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.4.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.5.weight torch.Size([8, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
ocmod.memssage_0.net.5.bias torch.Size([8]) Parameter containing:
tensor([ 2.3750,  2.4686, -0.1233,  1.1445,  0.2870, -0.7825, -0.6893, -0.5922],
       device='cuda:0', requires_grad=True)
outnn.net.0.weight torch.Size([32, 108]) Parameter containing:
tensor([[-0.0641, -0.1238,  0.1107,  ..., -0.0287,  0.2040,  0.0472],
        [ 0.0949,  0.1257,  0.0939,  ..., -0.0844, -0.0451, -0.1258],
        [ 0.1018, -0.0407, -0.0803,  ..., -0.0515, -0.1265, -0.0594],
        ...,
        [ 0.1250,  0.1455, -0.0104,  ..., -0.0319,  0.0594, -0.1582],
        [ 0.0183, -0.0424,  0.0426,  ...,  0.0477, -0.1928, -0.1782],
        [-0.0710, -0.1485,  0.1938,  ..., -0.0632,  0.2002,  0.0652]],
       device='cuda:0', requires_grad=True)
outnn.net.0.bias torch.Size([32]) Parameter containing:
tensor([-0.0289,  0.0320,  0.0828, -0.0904, -0.0656, -0.0118,  0.0268,  0.0897,
        -0.0860,  0.0123,  0.0352,  0.0393, -0.0246, -0.0343, -0.0511, -0.0581,
         0.0542, -0.0439,  0.0562, -0.0258,  0.0594,  0.0155,  0.0537,  0.0130,
        -0.0522,  0.0200, -0.0871, -0.0735,  0.0879, -0.0178,  0.0381, -0.0479],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.0.alpha torch.Size([1, 32]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.0.beta torch.Size([1, 32]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093]], device='cuda:0',
       requires_grad=True)
outnn.net.1.resblock.1.weight torch.Size([32]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.1.bias torch.Size([32]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
outnn.net.1.resblock.2.weight torch.Size([16, 32]) Parameter containing:
tensor([[-0.2001, -0.2847, -0.0833, -0.2439,  0.3517,  0.1207,  0.1804,  0.2276,
         -0.2506, -0.0369, -0.2656,  0.0343, -0.0512,  0.1408, -0.1594, -0.1624,
         -0.0611,  0.1427, -0.2348,  0.1845, -0.1796,  0.1840,  0.3148,  0.2350,
         -0.1462, -0.3348,  0.1348, -0.2903, -0.1024,  0.2248,  0.1462,  0.0671],
        [-0.3449, -0.1198,  0.1997,  0.1131, -0.1282,  0.0132,  0.2868,  0.1493,
          0.2142, -0.3268, -0.0559,  0.1215,  0.0470,  0.1109, -0.0894, -0.3401,
          0.1280, -0.3520, -0.0727,  0.1238,  0.0428,  0.1104,  0.0543,  0.1575,
          0.3070, -0.1364,  0.2910,  0.1305,  0.2548, -0.2475, -0.2565,  0.1205],
        [ 0.1132,  0.0705,  0.0841,  0.2924, -0.1116,  0.2339,  0.2733,  0.1842,
         -0.0994, -0.0935,  0.1952, -0.0367, -0.1667,  0.2957, -0.1894,  0.1149,
         -0.1945, -0.2197,  0.1689, -0.2136, -0.1534, -0.0456, -0.1671, -0.2625,
         -0.1268,  0.2450, -0.3362, -0.3067, -0.0613,  0.2416,  0.1513,  0.1301],
        [-0.2137,  0.2060, -0.3135,  0.3298,  0.1402, -0.1688, -0.2128,  0.1031,
          0.0729,  0.3118, -0.3483,  0.3494, -0.2748,  0.0746, -0.0288,  0.1994,
         -0.2449, -0.2005,  0.3293, -0.0729,  0.2837, -0.0782, -0.1935, -0.0592,
         -0.0962,  0.1842, -0.2496, -0.2648,  0.1089, -0.0466,  0.0066, -0.0575],
        [-0.2031,  0.0521,  0.0928, -0.2916,  0.2941,  0.2582, -0.1542,  0.3428,
         -0.1008, -0.1177, -0.3473,  0.0129,  0.3372,  0.3008,  0.0797, -0.2996,
         -0.0517, -0.1965, -0.3057,  0.2538, -0.1559, -0.0762,  0.2697, -0.0893,
          0.1216,  0.2693, -0.0858,  0.1162, -0.1462, -0.2662, -0.1720, -0.1162],
        [-0.1741,  0.0287,  0.0301, -0.2651,  0.0200, -0.3466, -0.3176, -0.0858,
         -0.1561, -0.2702, -0.2805,  0.2570, -0.1313,  0.0987, -0.0748,  0.0327,
          0.3082,  0.3238,  0.2799, -0.1745, -0.0101,  0.0495, -0.3171, -0.0758,
          0.0617, -0.1825, -0.3164, -0.1000,  0.0969, -0.1774,  0.0786,  0.3236],
        [ 0.0598, -0.1228,  0.1709, -0.0810, -0.0389,  0.1978, -0.2709,  0.3259,
         -0.3389,  0.2685, -0.2858,  0.2556,  0.1456,  0.2314,  0.2035, -0.3144,
          0.0797,  0.1477, -0.0880,  0.3415, -0.1286, -0.2643,  0.0895, -0.2378,
          0.1938,  0.2258, -0.1762, -0.1379, -0.1284,  0.0896, -0.2087, -0.0501],
        [ 0.1790, -0.1159, -0.2563, -0.2761,  0.2524,  0.0362,  0.3242,  0.1195,
          0.2942,  0.2205, -0.0060, -0.1791, -0.0048,  0.2616,  0.1044, -0.2038,
          0.2097,  0.2257, -0.1261, -0.2369,  0.1793, -0.1088, -0.3179, -0.2674,
         -0.2933,  0.3163,  0.1992, -0.3207, -0.0887, -0.1798, -0.1368, -0.1398],
        [ 0.1704, -0.2786,  0.2598, -0.0842, -0.0734,  0.0191, -0.1773,  0.2195,
         -0.1338, -0.2554,  0.2856,  0.0457, -0.2492,  0.0815,  0.2200,  0.0901,
         -0.0862,  0.1425, -0.1596,  0.0839,  0.1098,  0.3279, -0.2957,  0.3436,
          0.3289, -0.0167, -0.3361, -0.2011, -0.0048, -0.1969,  0.1509, -0.2360],
        [-0.0938, -0.0056,  0.3496, -0.0545, -0.1856,  0.2504, -0.1026, -0.0484,
         -0.3044, -0.2028,  0.3280, -0.2731, -0.2936,  0.0022, -0.1066, -0.3455,
         -0.1026, -0.0581,  0.0562,  0.0928, -0.0258, -0.1285, -0.0320,  0.0472,
          0.0538, -0.1838,  0.0372, -0.0298, -0.3172,  0.1288, -0.0935,  0.0292],
        [-0.1011,  0.0559,  0.2153, -0.0963,  0.2947,  0.1978,  0.0991, -0.0040,
          0.0026,  0.0243,  0.1774,  0.0390, -0.1837,  0.1982, -0.3313,  0.3524,
          0.3481,  0.0809,  0.2866, -0.1229,  0.2351,  0.3529, -0.0196, -0.0870,
          0.1790, -0.2132,  0.2819, -0.1205, -0.3143, -0.3492, -0.1223,  0.0175],
        [-0.2835,  0.1961,  0.1906, -0.1792, -0.2786,  0.1729,  0.2160,  0.0561,
         -0.1833,  0.0429, -0.0650, -0.2150,  0.2283, -0.3316, -0.0530, -0.1228,
          0.3000, -0.0844, -0.1389,  0.2708, -0.0837, -0.3232, -0.2448, -0.2422,
          0.2743,  0.2067,  0.0375, -0.0736,  0.3006, -0.0943, -0.1608,  0.2215],
        [-0.2094, -0.0283, -0.3197,  0.2128, -0.0768,  0.0538,  0.1675,  0.1296,
         -0.1455, -0.0819,  0.1521,  0.2060, -0.1858,  0.2624,  0.1895,  0.0927,
          0.2253,  0.3285,  0.2204, -0.0467,  0.1699,  0.0150, -0.0546, -0.0367,
          0.1260,  0.3396, -0.3152, -0.3259, -0.3505, -0.2556, -0.0538,  0.0074],
        [ 0.1190, -0.1359, -0.0024, -0.3499,  0.3017,  0.0298,  0.2521, -0.1917,
          0.3270, -0.2304, -0.0888,  0.2322, -0.1677,  0.1697,  0.0468,  0.0888,
         -0.2508,  0.0653, -0.1539,  0.1957,  0.0275,  0.0228, -0.3234,  0.3459,
          0.0673,  0.1765,  0.2004, -0.2913, -0.2585,  0.0877,  0.0178,  0.2191],
        [ 0.1415, -0.0034, -0.3032,  0.2096, -0.1296, -0.2967,  0.0760, -0.1802,
         -0.0559, -0.0530,  0.2130,  0.2240, -0.2720,  0.1892, -0.0796, -0.0798,
         -0.3267, -0.1249,  0.2615,  0.3128, -0.1451, -0.0324,  0.0382,  0.1455,
         -0.1331, -0.1989,  0.2647,  0.1645, -0.1024, -0.2096, -0.1588,  0.3046],
        [-0.1209, -0.2846, -0.2657, -0.2228, -0.1749, -0.3112, -0.1518,  0.0428,
          0.2854, -0.0963, -0.1827,  0.3305, -0.0225, -0.1152,  0.0421,  0.1655,
         -0.1153, -0.1818, -0.0644,  0.0780,  0.1193, -0.1058, -0.1582, -0.3144,
          0.0875,  0.0069, -0.3181,  0.2672,  0.1997,  0.3376, -0.1979,  0.1570]],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.2.bias torch.Size([16]) Parameter containing:
tensor([-0.1341, -0.0518, -0.1132, -0.0923, -0.1136, -0.1626,  0.1465,  0.1264,
        -0.1693,  0.1330,  0.0688, -0.0513,  0.1301, -0.0540,  0.1037,  0.0665],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.3.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.3.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312,
         0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312]],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.4.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.4.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.5.weight torch.Size([32, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
outnn.net.1.resblock.5.bias torch.Size([32]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
outnn.net.2.resblock.0.alpha torch.Size([1, 32]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
outnn.net.2.resblock.0.beta torch.Size([1, 32]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093]], device='cuda:0',
       requires_grad=True)
outnn.net.2.resblock.1.weight torch.Size([32]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
outnn.net.2.resblock.1.bias torch.Size([32]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
outnn.net.2.resblock.2.weight torch.Size([16, 32]) Parameter containing:
tensor([[ 0.0347, -0.0647,  0.0419, -0.2081,  0.1430,  0.1494, -0.2756,  0.3256,
         -0.1414,  0.0745, -0.1990,  0.0035, -0.3053, -0.2982,  0.2662,  0.3206,
          0.0621,  0.3174,  0.2482, -0.1093, -0.0449, -0.1092,  0.0452,  0.3269,
         -0.2386,  0.3241,  0.0008,  0.2765, -0.2190, -0.2974,  0.1882,  0.0290],
        [-0.1555, -0.2393, -0.3000, -0.3035,  0.1187, -0.1492,  0.1335,  0.2283,
         -0.1131, -0.1524,  0.2071, -0.3166, -0.3134, -0.2327, -0.0898,  0.2396,
         -0.2230,  0.2797,  0.1434,  0.0861,  0.2507, -0.1358,  0.0681, -0.0490,
          0.3239, -0.2981, -0.1551,  0.1074,  0.3387,  0.1839, -0.1344, -0.2294],
        [ 0.0921,  0.0250, -0.1187, -0.2997, -0.1388, -0.2362, -0.3211, -0.0518,
          0.0576,  0.1331, -0.3090,  0.2964,  0.0604,  0.0343,  0.0108,  0.2461,
          0.1386, -0.2993,  0.3225, -0.0252,  0.2582, -0.2305,  0.0663, -0.3067,
          0.1496, -0.0389,  0.3497, -0.1847,  0.1633, -0.0326, -0.2264, -0.3335],
        [ 0.1129, -0.0253, -0.2014,  0.2390, -0.0142, -0.2313, -0.0861, -0.1872,
          0.0187,  0.0452,  0.2399,  0.2751, -0.0853, -0.0370,  0.1468, -0.0615,
         -0.1192,  0.3457, -0.1283, -0.3436, -0.2888, -0.2849,  0.0571, -0.0261,
          0.3285, -0.3158,  0.0419,  0.2615, -0.0742,  0.3384,  0.0744, -0.1381],
        [ 0.1174, -0.3084,  0.3382, -0.0440,  0.1622,  0.1968,  0.1447, -0.2994,
         -0.1178,  0.1092, -0.0466,  0.2659,  0.0899, -0.2900,  0.2185, -0.1118,
         -0.3290,  0.1111, -0.1567,  0.1801,  0.3280, -0.1699,  0.0593,  0.0417,
          0.2043,  0.3394, -0.0838, -0.3488,  0.0589,  0.0221,  0.2929, -0.0751],
        [ 0.2910,  0.1831, -0.0196, -0.1089, -0.2428,  0.3517,  0.2277, -0.3252,
          0.1495,  0.0201,  0.1256,  0.0361, -0.0130, -0.3513,  0.0215, -0.2405,
         -0.1608,  0.1143, -0.2265,  0.0054, -0.0497,  0.0547, -0.3137,  0.1049,
          0.3062, -0.0322,  0.0157, -0.0850, -0.0910, -0.1511, -0.3260,  0.2124],
        [-0.1971,  0.0641, -0.1782, -0.3238,  0.0564,  0.1950,  0.2713, -0.0121,
          0.0709, -0.2677, -0.1146, -0.1258,  0.2144, -0.1565,  0.1135, -0.1813,
         -0.3206, -0.1289,  0.1555, -0.1079,  0.2224,  0.3201, -0.0821, -0.2615,
         -0.1696,  0.3274, -0.0743, -0.2967, -0.0169,  0.3390, -0.1881, -0.2791],
        [-0.1983, -0.2128,  0.0570, -0.2111, -0.0411, -0.2749, -0.2764,  0.1010,
          0.2341, -0.1343,  0.3278, -0.0486, -0.0853, -0.0985,  0.1628,  0.0197,
         -0.0508, -0.0572,  0.2156, -0.2293,  0.2224,  0.3241,  0.2558,  0.2325,
          0.0580, -0.2859, -0.2786,  0.2762,  0.0952,  0.2927,  0.2432,  0.2481],
        [ 0.2415,  0.0186,  0.2279, -0.3376, -0.0387,  0.0203,  0.3215,  0.0217,
         -0.2495,  0.2327, -0.2020,  0.0569,  0.1053, -0.3511, -0.2534,  0.1046,
          0.1516, -0.3235,  0.1013, -0.2176, -0.0827, -0.1622,  0.2340, -0.2011,
          0.2558, -0.0331,  0.1490, -0.1878,  0.1155,  0.2772,  0.0046,  0.1756],
        [ 0.3056,  0.1386,  0.0484, -0.0699, -0.2654, -0.1276, -0.2621,  0.2922,
         -0.2231, -0.3077,  0.2534,  0.3030,  0.1074, -0.1135,  0.2650, -0.2724,
         -0.1058, -0.2186, -0.2204, -0.0323,  0.2956, -0.2943, -0.2055, -0.1618,
          0.3097, -0.1978, -0.1293, -0.0240, -0.0196, -0.0468,  0.2631, -0.1572],
        [-0.1393, -0.0351,  0.1398,  0.3528,  0.2025, -0.2239, -0.3055, -0.1978,
          0.0746, -0.0577,  0.1431, -0.1743,  0.1661,  0.0439,  0.2170,  0.0512,
          0.3301,  0.1320, -0.2782, -0.1158,  0.1200,  0.0776,  0.1331,  0.2188,
         -0.0723, -0.2465,  0.2866, -0.1908, -0.2635,  0.2755,  0.3533,  0.2939],
        [ 0.3252, -0.0557,  0.3456, -0.0607,  0.3015, -0.2641,  0.0252, -0.1063,
          0.2630,  0.2072, -0.1916, -0.3118,  0.0841,  0.1454,  0.0768,  0.0172,
         -0.0503,  0.1538, -0.2735, -0.2039,  0.0105, -0.2716, -0.1337, -0.0981,
         -0.1255, -0.2146,  0.3341, -0.2669,  0.2664,  0.2898,  0.3423, -0.2772],
        [ 0.3166, -0.0836,  0.2940, -0.0442,  0.0064,  0.1071, -0.0144, -0.2829,
         -0.2089,  0.0814, -0.3418,  0.1103, -0.3043,  0.2390,  0.2426,  0.3292,
          0.2100,  0.2576, -0.0134, -0.3272, -0.3241,  0.1851, -0.2103, -0.0172,
          0.3218, -0.0099, -0.0963, -0.3478, -0.3211, -0.2933,  0.1770, -0.2127],
        [ 0.0226,  0.3150,  0.2779,  0.0325,  0.2363,  0.0210,  0.0141, -0.0892,
          0.1334,  0.1436, -0.2123,  0.1026,  0.2639,  0.2277, -0.2659,  0.1785,
          0.3370,  0.2440, -0.2602,  0.0392,  0.1079,  0.1205, -0.2744, -0.0931,
          0.1821,  0.0560,  0.0472, -0.2483, -0.2758, -0.1802,  0.2507,  0.1050],
        [ 0.2356,  0.0958, -0.0636, -0.2810, -0.0767,  0.2928,  0.0494,  0.3243,
         -0.2893, -0.2248, -0.2298, -0.3471,  0.0107,  0.3274,  0.2658, -0.2101,
          0.2505,  0.2371, -0.3507,  0.3108,  0.1680, -0.2556,  0.1905, -0.0518,
          0.2738,  0.0979, -0.1850, -0.2804, -0.2186,  0.1291, -0.2796,  0.3280],
        [-0.0767, -0.3482,  0.3286,  0.2251,  0.1640, -0.0474, -0.2958, -0.1636,
          0.0732, -0.0075,  0.3200,  0.2125, -0.2399,  0.0296,  0.0879, -0.2931,
         -0.1922, -0.2935,  0.0585, -0.1219, -0.0888,  0.3046,  0.3118,  0.0610,
          0.0463, -0.0357,  0.2543,  0.1478,  0.1484,  0.0504, -0.1201,  0.0183]],
       device='cuda:0', requires_grad=True)
outnn.net.2.resblock.2.bias torch.Size([16]) Parameter containing:
tensor([ 0.1274, -0.1659,  0.1761,  0.1721, -0.1192, -0.0448, -0.0794,  0.1330,
        -0.0091, -0.0473, -0.1483, -0.1442, -0.0724,  0.0232,  0.1188, -0.1029],
       device='cuda:0', requires_grad=True)
outnn.net.2.resblock.3.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
outnn.net.2.resblock.3.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312,
         0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312]],
       device='cuda:0', requires_grad=True)
outnn.net.2.resblock.4.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
outnn.net.2.resblock.4.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
outnn.net.2.resblock.5.weight torch.Size([32, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
outnn.net.2.resblock.5.bias torch.Size([32]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
outnn.net.3.resblock.0.alpha torch.Size([1, 32]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
outnn.net.3.resblock.0.beta torch.Size([1, 32]) Parameter containing:
tensor([[0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093, 0.0093,
         0.0093, 0.0093, 0.0093, 0.0093, 0.0093]], device='cuda:0',
       requires_grad=True)
outnn.net.3.resblock.1.weight torch.Size([32]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
outnn.net.3.resblock.1.bias torch.Size([32]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
outnn.net.3.resblock.2.weight torch.Size([16, 32]) Parameter containing:
tensor([[ 9.0568e-02, -5.3169e-03, -8.5520e-04, -3.0666e-01,  2.5883e-01,
          7.4046e-02,  4.3372e-02,  1.9616e-02, -2.4120e-01,  2.3608e-01,
         -8.6106e-02,  2.4459e-01, -2.4178e-01,  2.8360e-01,  2.0181e-01,
          2.0921e-01,  3.0510e-01, -3.1883e-01, -1.6412e-01,  1.9471e-02,
         -2.5425e-01, -3.0610e-01,  1.1659e-01,  3.0408e-01,  2.6462e-01,
         -2.5543e-01,  3.5082e-01, -2.4026e-01, -1.1186e-01, -3.4072e-01,
         -5.7091e-03, -1.4366e-01],
        [ 2.6834e-01, -1.6360e-01,  2.9694e-01,  1.9556e-01,  2.3788e-01,
         -1.7160e-01,  1.4786e-01, -1.1838e-01, -3.2151e-01, -2.2176e-01,
         -6.2481e-02,  2.6226e-02, -1.3806e-01, -1.1779e-01, -4.2143e-02,
         -7.5412e-02, -2.6414e-01, -2.6737e-01, -2.9771e-01,  3.3897e-01,
          3.3813e-01,  1.4875e-01, -2.7736e-01, -3.0041e-01, -7.4580e-02,
          5.5645e-02,  5.8205e-02, -7.3854e-02,  3.0041e-01,  2.1884e-01,
         -1.1895e-01, -8.8986e-02],
        [ 2.7544e-01, -3.2257e-03,  2.7740e-01, -2.4649e-01, -1.7423e-01,
         -2.2414e-01, -1.4836e-02, -3.2180e-01, -2.1384e-02, -3.1084e-01,
         -1.2693e-01,  1.8456e-01, -2.7081e-01,  3.3401e-01, -1.6127e-01,
         -2.7061e-01,  1.8200e-02, -2.0435e-01, -9.0140e-02, -1.0679e-01,
          1.7864e-01, -3.0999e-01, -1.6977e-02, -2.6735e-01, -2.5985e-01,
          1.5186e-01, -1.7205e-02,  3.1718e-01,  1.0001e-01,  3.2546e-01,
         -9.9037e-02,  2.8462e-02],
        [-2.5278e-01,  1.2353e-01, -1.5889e-01, -3.1329e-01, -2.6526e-01,
          2.9163e-01,  2.8502e-01, -1.6035e-01, -2.4673e-01,  3.1540e-02,
         -1.4742e-01,  1.3480e-01,  2.5480e-01, -9.6195e-02,  2.5324e-02,
         -2.7617e-01, -2.8534e-01,  3.0052e-01, -2.5634e-02, -2.5453e-01,
          2.8801e-01,  1.0356e-01, -3.3759e-01, -3.0075e-01, -1.3713e-01,
         -2.5965e-01, -7.0733e-02,  1.8789e-01,  1.8021e-01, -3.4323e-01,
         -2.2139e-02,  7.7858e-02],
        [-2.6718e-01, -2.9154e-01,  2.2024e-01,  1.9647e-01,  8.1031e-03,
         -2.7131e-02,  8.9847e-02, -1.2509e-01, -1.2727e-01,  8.9690e-02,
          2.2867e-01, -1.6483e-01, -1.5856e-02,  3.6546e-02, -2.0373e-01,
          3.4729e-02,  1.8398e-01,  1.0698e-01, -1.4795e-01, -2.3271e-01,
         -4.1846e-03,  2.6563e-01,  3.4228e-01,  1.3014e-01, -1.0439e-01,
          9.7190e-02, -2.3204e-01,  2.0273e-01, -1.1400e-01,  7.8205e-02,
         -7.5310e-02,  2.6446e-01],
        [ 1.0989e-01, -7.4064e-02,  1.8130e-01, -1.1088e-01,  1.2990e-01,
          6.9179e-02,  2.0406e-01,  2.7379e-01, -3.3156e-02,  2.5889e-01,
          2.7664e-01, -1.4534e-01,  6.6618e-02, -2.6580e-01, -3.4655e-01,
          1.9109e-01, -8.8314e-02,  7.6578e-02,  1.7531e-01,  1.2075e-01,
         -8.5127e-02, -5.3052e-02, -1.8292e-01,  2.1956e-01, -1.7952e-01,
          3.1159e-01,  7.7479e-02,  2.2081e-01,  9.1742e-02, -1.2298e-01,
          4.3328e-02,  2.3699e-01],
        [-2.9886e-01,  2.9453e-01, -3.1907e-01,  2.5508e-01, -1.7276e-02,
         -2.1518e-01, -3.3661e-01,  1.8752e-01, -2.0880e-01,  2.2077e-01,
          3.4425e-02,  4.4530e-03,  8.7122e-02,  2.0349e-01, -3.4648e-01,
         -8.3973e-02, -1.8515e-01, -1.5611e-01,  1.5389e-01, -2.0811e-01,
          1.3479e-01, -1.5872e-01, -2.2836e-01,  1.5370e-01,  1.4212e-01,
         -2.6341e-01,  2.2901e-01, -3.2790e-01, -5.1431e-02,  3.2479e-01,
          1.5131e-01, -2.5203e-01],
        [-7.3301e-02,  1.6023e-01,  6.1569e-02,  2.0878e-01, -7.7101e-02,
          2.0176e-01, -5.6448e-03,  2.8336e-01,  8.2850e-02, -2.9452e-01,
          3.4540e-01,  1.4967e-01,  2.0310e-02,  2.3912e-01,  1.4434e-02,
          2.6395e-01, -2.8539e-01, -8.5800e-02,  7.3638e-02,  2.4456e-01,
          1.8262e-01,  5.6702e-02, -6.6510e-02, -6.6597e-02,  3.2219e-01,
          1.1837e-01, -5.7585e-02, -3.4227e-01,  2.7958e-01, -2.4552e-01,
         -2.2336e-01,  1.5494e-01],
        [-8.5907e-02, -1.9398e-01, -1.1220e-01, -2.2584e-01,  1.7273e-01,
         -3.2413e-01,  5.6320e-02, -1.2746e-01, -5.1998e-02, -1.9615e-01,
         -2.7411e-01,  2.3064e-01, -9.3406e-02, -3.3125e-01, -5.5587e-02,
          2.6615e-01,  2.2335e-01,  2.2907e-01,  8.6645e-02, -5.7099e-02,
         -1.8496e-01, -4.9831e-02, -1.8362e-01,  7.7290e-02,  3.3647e-01,
          2.6973e-01,  9.8286e-02,  1.5458e-01,  9.1470e-02, -2.8977e-01,
         -9.6962e-02,  1.0189e-02],
        [-1.5635e-01,  3.4241e-01, -2.6061e-01,  8.4746e-02, -3.4796e-01,
         -1.7757e-01, -1.0497e-01,  9.2872e-02,  1.0553e-01, -3.1243e-01,
          4.4291e-02,  2.7619e-01, -5.8230e-02, -7.1587e-02, -1.3526e-01,
         -2.8077e-01,  1.5517e-01,  3.4514e-01,  2.0985e-01,  2.8363e-01,
         -2.1827e-01,  1.3753e-01, -3.0542e-01, -2.3738e-01,  2.3509e-01,
         -3.6277e-02, -1.2679e-01,  2.8353e-01, -1.0861e-01,  1.8928e-01,
          1.5012e-01,  2.9161e-01],
        [-3.2823e-01, -1.7312e-01, -1.8101e-01,  1.7525e-04, -3.4777e-01,
          1.9025e-01, -2.0207e-01,  2.1576e-01,  1.8680e-01, -2.0468e-01,
         -5.9474e-02, -2.3022e-01,  2.5715e-01,  5.4526e-02, -1.9292e-02,
          4.5821e-02, -1.0424e-01, -2.5482e-01, -2.2997e-02, -1.1393e-01,
         -3.3356e-01,  6.9918e-02,  1.7820e-01,  2.7938e-02,  4.9425e-02,
          9.3971e-02,  7.1138e-02, -3.2052e-02,  1.8488e-01,  2.8717e-01,
         -1.3139e-01,  6.6313e-02],
        [ 1.1061e-01, -1.9537e-02,  3.3388e-01, -1.9249e-01, -1.8410e-01,
          1.8741e-01,  1.0903e-01, -6.7679e-03,  3.2079e-01,  1.9056e-01,
          3.3449e-01,  2.3422e-01, -1.3572e-01,  3.0589e-01, -1.9064e-02,
         -4.6620e-02, -2.0367e-01, -2.7794e-01,  2.8561e-01,  2.0270e-01,
          2.5545e-01, -3.5986e-03,  7.6043e-02, -1.2773e-01,  2.2068e-01,
          2.1987e-01, -3.0231e-01, -3.3779e-01,  1.4896e-01, -1.7558e-01,
         -2.3075e-01, -4.8297e-02],
        [ 2.3704e-01, -2.4974e-01, -2.1374e-02,  9.1213e-02, -1.5595e-01,
         -2.3154e-01,  1.1979e-01, -2.3254e-01, -9.2469e-02, -2.4936e-01,
         -2.0917e-01, -3.0059e-01,  1.7826e-01,  5.8949e-02, -1.1716e-01,
          1.4182e-01,  1.5389e-01, -2.8968e-01,  1.2503e-01,  1.6250e-01,
          3.2565e-01,  2.6564e-01,  1.0706e-01, -1.2589e-01,  1.5825e-01,
         -4.5928e-02,  2.3592e-01,  2.6388e-01,  3.0256e-01,  2.9994e-01,
          1.8753e-01,  5.8918e-02],
        [-2.0456e-01,  3.6811e-02, -1.8360e-01,  5.4638e-02,  3.3583e-01,
          3.4304e-01, -2.0500e-01, -3.1819e-01,  1.2190e-01, -3.7319e-03,
          2.1352e-01,  1.2374e-02,  3.1936e-01, -2.6094e-01,  1.5648e-01,
         -2.8977e-01, -1.5131e-01, -1.6647e-01,  1.8880e-01,  9.0923e-02,
          2.8803e-01, -3.1705e-01, -1.8563e-01,  7.2416e-02, -2.3316e-01,
         -1.2220e-01, -2.8181e-01,  4.2882e-02, -1.1985e-01,  3.2743e-01,
         -2.0728e-01, -4.2582e-02],
        [-2.3293e-02,  2.3723e-01,  3.0889e-01,  2.4654e-01,  3.2386e-01,
          1.0684e-01,  2.5464e-01,  2.1147e-02,  9.1508e-02,  1.1346e-01,
         -2.0731e-01,  1.3512e-01, -3.1554e-01,  2.3723e-01,  7.2873e-02,
         -1.2977e-01, -2.7209e-02,  3.0207e-01,  1.6012e-01,  2.4971e-01,
         -3.3637e-01,  2.2898e-01,  2.0360e-01,  2.3053e-01,  1.1912e-01,
          3.0253e-01, -2.1467e-02, -1.9132e-01,  1.8165e-01,  3.2526e-01,
         -1.4014e-01,  1.5524e-01],
        [ 9.2879e-02, -2.0519e-01,  1.0457e-02,  1.0719e-01,  1.5376e-01,
         -1.5801e-01,  2.4914e-01, -6.2497e-02,  3.2794e-01, -2.8985e-01,
          9.1665e-02,  1.6065e-02, -1.6728e-01, -2.4600e-01,  1.6283e-01,
         -1.3494e-01, -1.8255e-01, -2.9383e-01, -2.3652e-01,  5.3495e-03,
         -1.3080e-01,  2.2039e-01,  2.7769e-01, -2.8053e-01,  2.3827e-01,
         -2.2315e-01,  1.1468e-01,  3.2365e-01, -3.2639e-01,  2.0528e-01,
          1.4167e-01,  1.0948e-01]], device='cuda:0', requires_grad=True)
outnn.net.3.resblock.2.bias torch.Size([16]) Parameter containing:
tensor([ 0.1730,  0.0121,  0.0700,  0.1262, -0.1204,  0.1389, -0.0166, -0.1423,
        -0.0759,  0.1553, -0.0178, -0.1634,  0.0924, -0.0805, -0.0385,  0.1066],
       device='cuda:0', requires_grad=True)
outnn.net.3.resblock.3.alpha torch.Size([1, 16]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
outnn.net.3.resblock.3.beta torch.Size([1, 16]) Parameter containing:
tensor([[0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312,
         0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312, 0.0312]],
       device='cuda:0', requires_grad=True)
outnn.net.3.resblock.4.weight torch.Size([16]) Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:0', requires_grad=True)
outnn.net.3.resblock.4.bias torch.Size([16]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
outnn.net.3.resblock.5.weight torch.Size([32, 16]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='cuda:0', requires_grad=True)
outnn.net.3.resblock.5.bias torch.Size([32]) Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
outnn.net.4.alpha torch.Size([1, 32]) Parameter containing:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]],
       device='cuda:0', requires_grad=True)
outnn.net.4.beta torch.Size([1, 32]) Parameter containing:
tensor([[0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625,
         0.0625, 0.0625, 0.0625, 0.0625, 0.0625]], device='cuda:0',
       requires_grad=True)
outnn.net.5.weight torch.Size([1, 32]) Parameter containing:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0', requires_grad=True)
outnn.net.5.bias torch.Size([1]) Parameter containing:
tensor([1.], device='cuda:0', requires_grad=True)
